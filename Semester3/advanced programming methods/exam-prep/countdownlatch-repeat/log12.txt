ProgramState{id=1
exeStack=MyStack{stack=[(v=(int);(a=(RefType{inner=int});(v=ValueExp{e=IntValue{val=10}};(HeapAllocation{varName='a', exp=ValueExp{e=IntValue{val=22}}};(ForkStatement{state=(HeapWriting{varName='a', expression=ValueExp{e=IntValue{val=30}}};(v=ValueExp{e=IntValue{val=32}};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))))};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}})))))))]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(a=(RefType{inner=int});(v=ValueExp{e=IntValue{val=10}};(HeapAllocation{varName='a', exp=ValueExp{e=IntValue{val=22}}};(ForkStatement{state=(HeapWriting{varName='a', expression=ValueExp{e=IntValue{val=30}}};(v=ValueExp{e=IntValue{val=32}};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))))};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}})))))), v=(int)]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(a=(RefType{inner=int});(v=ValueExp{e=IntValue{val=10}};(HeapAllocation{varName='a', exp=ValueExp{e=IntValue{val=22}}};(ForkStatement{state=(HeapWriting{varName='a', expression=ValueExp{e=IntValue{val=30}}};(v=ValueExp{e=IntValue{val=32}};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))))};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}})))))), v=(int)]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(a=(RefType{inner=int});(v=ValueExp{e=IntValue{val=10}};(HeapAllocation{varName='a', exp=ValueExp{e=IntValue{val=22}}};(ForkStatement{state=(HeapWriting{varName='a', expression=ValueExp{e=IntValue{val=30}}};(v=ValueExp{e=IntValue{val=32}};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))))};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(a=(RefType{inner=int});(v=ValueExp{e=IntValue{val=10}};(HeapAllocation{varName='a', exp=ValueExp{e=IntValue{val=22}}};(ForkStatement{state=(HeapWriting{varName='a', expression=ValueExp{e=IntValue{val=30}}};(v=ValueExp{e=IntValue{val=32}};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))))};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=10}};(HeapAllocation{varName='a', exp=ValueExp{e=IntValue{val=22}}};(ForkStatement{state=(HeapWriting{varName='a', expression=ValueExp{e=IntValue{val=30}}};(v=ValueExp{e=IntValue{val=32}};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))))};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))))), a=(RefType{inner=int})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=10}};(HeapAllocation{varName='a', exp=ValueExp{e=IntValue{val=22}}};(ForkStatement{state=(HeapWriting{varName='a', expression=ValueExp{e=IntValue{val=30}}};(v=ValueExp{e=IntValue{val=32}};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))))};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))))), a=(RefType{inner=int})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=10}};(HeapAllocation{varName='a', exp=ValueExp{e=IntValue{val=22}}};(ForkStatement{state=(HeapWriting{varName='a', expression=ValueExp{e=IntValue{val=30}}};(v=ValueExp{e=IntValue{val=32}};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))))};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}})))))]}
, symTable=MyDictionary{dictionary={a=(0, int), v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=10}};(HeapAllocation{varName='a', exp=ValueExp{e=IntValue{val=22}}};(ForkStatement{state=(HeapWriting{varName='a', expression=ValueExp{e=IntValue{val=30}}};(v=ValueExp{e=IntValue{val=32}};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))))};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}})))))]}
, symTable=MyDictionary{dictionary={a=(0, int), v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=ValueExp{e=IntValue{val=22}}};(ForkStatement{state=(HeapWriting{varName='a', expression=ValueExp{e=IntValue{val=30}}};(v=ValueExp{e=IntValue{val=32}};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))))};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}})))), v=ValueExp{e=IntValue{val=10}}]}
, symTable=MyDictionary{dictionary={a=(0, int), v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=ValueExp{e=IntValue{val=22}}};(ForkStatement{state=(HeapWriting{varName='a', expression=ValueExp{e=IntValue{val=30}}};(v=ValueExp{e=IntValue{val=32}};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))))};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}})))), v=ValueExp{e=IntValue{val=10}}]}
, symTable=MyDictionary{dictionary={a=(0, int), v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=ValueExp{e=IntValue{val=22}}};(ForkStatement{state=(HeapWriting{varName='a', expression=ValueExp{e=IntValue{val=30}}};(v=ValueExp{e=IntValue{val=32}};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))))};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))))]}
, symTable=MyDictionary{dictionary={a=(0, int), v=IntValue{val=10}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=ValueExp{e=IntValue{val=22}}};(ForkStatement{state=(HeapWriting{varName='a', expression=ValueExp{e=IntValue{val=30}}};(v=ValueExp{e=IntValue{val=32}};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))))};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))))]}
, symTable=MyDictionary{dictionary={a=(0, int), v=IntValue{val=10}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(HeapWriting{varName='a', expression=ValueExp{e=IntValue{val=30}}};(v=ValueExp{e=IntValue{val=32}};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))))};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))), HeapAllocation{varName='a', exp=ValueExp{e=IntValue{val=22}}}]}
, symTable=MyDictionary{dictionary={a=(0, int), v=IntValue{val=10}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(HeapWriting{varName='a', expression=ValueExp{e=IntValue{val=30}}};(v=ValueExp{e=IntValue{val=32}};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))))};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))), HeapAllocation{varName='a', exp=ValueExp{e=IntValue{val=22}}}]}
, symTable=MyDictionary{dictionary={a=(0, int), v=IntValue{val=10}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(HeapWriting{varName='a', expression=ValueExp{e=IntValue{val=30}}};(v=ValueExp{e=IntValue{val=32}};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))))};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}})))]}
, symTable=MyDictionary{dictionary={a=(1, int), v=IntValue{val=10}}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=22}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(HeapWriting{varName='a', expression=ValueExp{e=IntValue{val=30}}};(v=ValueExp{e=IntValue{val=32}};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))))};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}})))]}
, symTable=MyDictionary{dictionary={a=(1, int), v=IntValue{val=10}}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=22}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}})), ForkStatement{state=(HeapWriting{varName='a', expression=ValueExp{e=IntValue{val=30}}};(v=ValueExp{e=IntValue{val=32}};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))))}]}
, symTable=MyDictionary{dictionary={a=(1, int), v=IntValue{val=10}}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=22}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}})), ForkStatement{state=(HeapWriting{varName='a', expression=ValueExp{e=IntValue{val=30}}};(v=ValueExp{e=IntValue{val=32}};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))))}]}
, symTable=MyDictionary{dictionary={a=(1, int), v=IntValue{val=10}}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=22}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(1, int), v=IntValue{val=10}}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=22}}, freeAddress=2}

}
ProgramState{id=22
exeStack=MyStack{stack=[(HeapWriting{varName='a', expression=ValueExp{e=IntValue{val=30}}};(v=ValueExp{e=IntValue{val=32}};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))))]}
, symTable=MyDictionary{dictionary={a=(1, int), v=IntValue{val=10}}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=22}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(1, int), v=IntValue{val=10}}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=22}}, freeAddress=2}

}
ProgramState{id=22
exeStack=MyStack{stack=[(HeapWriting{varName='a', expression=ValueExp{e=IntValue{val=30}}};(v=ValueExp{e=IntValue{val=32}};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))))]}
, symTable=MyDictionary{dictionary={a=(1, int), v=IntValue{val=10}}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=22}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={a=(1, int), v=IntValue{val=10}}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=22}}, freeAddress=2}

}
ProgramState{id=22
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=32}};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))), HeapWriting{varName='a', expression=ValueExp{e=IntValue{val=30}}}]}
, symTable=MyDictionary{dictionary={a=(1, int), v=IntValue{val=10}}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=22}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={a=(1, int), v=IntValue{val=10}}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=22}}, freeAddress=2}

}
ProgramState{id=22
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=32}};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))), HeapWriting{varName='a', expression=ValueExp{e=IntValue{val=30}}}]}
, symTable=MyDictionary{dictionary={a=(1, int), v=IntValue{val=10}}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=22}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(1, int), v=IntValue{val=10}}}
, out=IntValue{val=10} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=30}}, freeAddress=2}

}
ProgramState{id=22
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=32}};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}})))]}
, symTable=MyDictionary{dictionary={a=(1, int), v=IntValue{val=10}}}
, out=IntValue{val=10} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=30}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(1, int), v=IntValue{val=10}}}
, out=IntValue{val=10} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=30}}, freeAddress=2}

}
ProgramState{id=22
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=32}};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}})))]}
, symTable=MyDictionary{dictionary={a=(1, int), v=IntValue{val=10}}}
, out=IntValue{val=10} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=30}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(1, int), v=IntValue{val=10}}}
, out=IntValue{val=10} IntValue{val=30} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=30}}, freeAddress=2}

}
ProgramState{id=22
exeStack=MyStack{stack=[(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}})), v=ValueExp{e=IntValue{val=32}}]}
, symTable=MyDictionary{dictionary={a=(1, int), v=IntValue{val=10}}}
, out=IntValue{val=10} IntValue{val=30} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=30}}, freeAddress=2}

}
ProgramState{id=22
exeStack=MyStack{stack=[(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}})), v=ValueExp{e=IntValue{val=32}}]}
, symTable=MyDictionary{dictionary={a=(1, int), v=IntValue{val=10}}}
, out=IntValue{val=10} IntValue{val=30} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=30}}, freeAddress=2}

}
ProgramState{id=22
exeStack=MyStack{stack=[(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(1, int), v=IntValue{val=32}}}
, out=IntValue{val=10} IntValue{val=30} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=30}}, freeAddress=2}

}
ProgramState{id=22
exeStack=MyStack{stack=[(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(1, int), v=IntValue{val=32}}}
, out=IntValue{val=10} IntValue{val=30} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=30}}, freeAddress=2}

}
ProgramState{id=22
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={a=(1, int), v=IntValue{val=32}}}
, out=IntValue{val=10} IntValue{val=30} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=30}}, freeAddress=2}

}
ProgramState{id=22
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={a=(1, int), v=IntValue{val=32}}}
, out=IntValue{val=10} IntValue{val=30} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=30}}, freeAddress=2}

}
ProgramState{id=22
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(1, int), v=IntValue{val=32}}}
, out=IntValue{val=10} IntValue{val=30} IntValue{val=32} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=30}}, freeAddress=2}

}
ProgramState{id=22
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(1, int), v=IntValue{val=32}}}
, out=IntValue{val=10} IntValue{val=30} IntValue{val=32} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=30}}, freeAddress=2}

}
ProgramState{id=22
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(1, int), v=IntValue{val=32}}}
, out=IntValue{val=10} IntValue{val=30} IntValue{val=32} IntValue{val=30} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=30}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=(int);(a=(RefType{inner=int});(v=ValueExp{e=IntValue{val=10}};(HeapAllocation{varName='a', exp=ValueExp{e=IntValue{val=22}}};(ForkStatement{state=(HeapWriting{varName='a', expression=ValueExp{e=IntValue{val=30}}};(v=ValueExp{e=IntValue{val=32}};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))))};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}})))))))]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(a=(RefType{inner=int});(v=ValueExp{e=IntValue{val=10}};(HeapAllocation{varName='a', exp=ValueExp{e=IntValue{val=22}}};(ForkStatement{state=(HeapWriting{varName='a', expression=ValueExp{e=IntValue{val=30}}};(v=ValueExp{e=IntValue{val=32}};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))))};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}})))))), v=(int)]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(a=(RefType{inner=int});(v=ValueExp{e=IntValue{val=10}};(HeapAllocation{varName='a', exp=ValueExp{e=IntValue{val=22}}};(ForkStatement{state=(HeapWriting{varName='a', expression=ValueExp{e=IntValue{val=30}}};(v=ValueExp{e=IntValue{val=32}};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))))};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}})))))), v=(int)]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(a=(RefType{inner=int});(v=ValueExp{e=IntValue{val=10}};(HeapAllocation{varName='a', exp=ValueExp{e=IntValue{val=22}}};(ForkStatement{state=(HeapWriting{varName='a', expression=ValueExp{e=IntValue{val=30}}};(v=ValueExp{e=IntValue{val=32}};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))))};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(a=(RefType{inner=int});(v=ValueExp{e=IntValue{val=10}};(HeapAllocation{varName='a', exp=ValueExp{e=IntValue{val=22}}};(ForkStatement{state=(HeapWriting{varName='a', expression=ValueExp{e=IntValue{val=30}}};(v=ValueExp{e=IntValue{val=32}};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))))};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=10}};(HeapAllocation{varName='a', exp=ValueExp{e=IntValue{val=22}}};(ForkStatement{state=(HeapWriting{varName='a', expression=ValueExp{e=IntValue{val=30}}};(v=ValueExp{e=IntValue{val=32}};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))))};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))))), a=(RefType{inner=int})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=10}};(HeapAllocation{varName='a', exp=ValueExp{e=IntValue{val=22}}};(ForkStatement{state=(HeapWriting{varName='a', expression=ValueExp{e=IntValue{val=30}}};(v=ValueExp{e=IntValue{val=32}};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))))};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))))), a=(RefType{inner=int})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=10}};(HeapAllocation{varName='a', exp=ValueExp{e=IntValue{val=22}}};(ForkStatement{state=(HeapWriting{varName='a', expression=ValueExp{e=IntValue{val=30}}};(v=ValueExp{e=IntValue{val=32}};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))))};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}})))))]}
, symTable=MyDictionary{dictionary={a=(0, int), v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=10}};(HeapAllocation{varName='a', exp=ValueExp{e=IntValue{val=22}}};(ForkStatement{state=(HeapWriting{varName='a', expression=ValueExp{e=IntValue{val=30}}};(v=ValueExp{e=IntValue{val=32}};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))))};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}})))))]}
, symTable=MyDictionary{dictionary={a=(0, int), v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=ValueExp{e=IntValue{val=22}}};(ForkStatement{state=(HeapWriting{varName='a', expression=ValueExp{e=IntValue{val=30}}};(v=ValueExp{e=IntValue{val=32}};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))))};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}})))), v=ValueExp{e=IntValue{val=10}}]}
, symTable=MyDictionary{dictionary={a=(0, int), v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=ValueExp{e=IntValue{val=22}}};(ForkStatement{state=(HeapWriting{varName='a', expression=ValueExp{e=IntValue{val=30}}};(v=ValueExp{e=IntValue{val=32}};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))))};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}})))), v=ValueExp{e=IntValue{val=10}}]}
, symTable=MyDictionary{dictionary={a=(0, int), v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=ValueExp{e=IntValue{val=22}}};(ForkStatement{state=(HeapWriting{varName='a', expression=ValueExp{e=IntValue{val=30}}};(v=ValueExp{e=IntValue{val=32}};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))))};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))))]}
, symTable=MyDictionary{dictionary={a=(0, int), v=IntValue{val=10}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=ValueExp{e=IntValue{val=22}}};(ForkStatement{state=(HeapWriting{varName='a', expression=ValueExp{e=IntValue{val=30}}};(v=ValueExp{e=IntValue{val=32}};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))))};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))))]}
, symTable=MyDictionary{dictionary={a=(0, int), v=IntValue{val=10}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(HeapWriting{varName='a', expression=ValueExp{e=IntValue{val=30}}};(v=ValueExp{e=IntValue{val=32}};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))))};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))), HeapAllocation{varName='a', exp=ValueExp{e=IntValue{val=22}}}]}
, symTable=MyDictionary{dictionary={a=(0, int), v=IntValue{val=10}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(HeapWriting{varName='a', expression=ValueExp{e=IntValue{val=30}}};(v=ValueExp{e=IntValue{val=32}};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))))};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))), HeapAllocation{varName='a', exp=ValueExp{e=IntValue{val=22}}}]}
, symTable=MyDictionary{dictionary={a=(0, int), v=IntValue{val=10}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(HeapWriting{varName='a', expression=ValueExp{e=IntValue{val=30}}};(v=ValueExp{e=IntValue{val=32}};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))))};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}})))]}
, symTable=MyDictionary{dictionary={a=(1, int), v=IntValue{val=10}}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=22}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(HeapWriting{varName='a', expression=ValueExp{e=IntValue{val=30}}};(v=ValueExp{e=IntValue{val=32}};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))))};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}})))]}
, symTable=MyDictionary{dictionary={a=(1, int), v=IntValue{val=10}}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=22}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}})), ForkStatement{state=(HeapWriting{varName='a', expression=ValueExp{e=IntValue{val=30}}};(v=ValueExp{e=IntValue{val=32}};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))))}]}
, symTable=MyDictionary{dictionary={a=(1, int), v=IntValue{val=10}}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=22}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}})), ForkStatement{state=(HeapWriting{varName='a', expression=ValueExp{e=IntValue{val=30}}};(v=ValueExp{e=IntValue{val=32}};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))))}]}
, symTable=MyDictionary{dictionary={a=(1, int), v=IntValue{val=10}}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=22}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(1, int), v=IntValue{val=10}}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=22}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(HeapWriting{varName='a', expression=ValueExp{e=IntValue{val=30}}};(v=ValueExp{e=IntValue{val=32}};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))))]}
, symTable=MyDictionary{dictionary={a=(1, int), v=IntValue{val=10}}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=22}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(1, int), v=IntValue{val=10}}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=22}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(HeapWriting{varName='a', expression=ValueExp{e=IntValue{val=30}}};(v=ValueExp{e=IntValue{val=32}};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))))]}
, symTable=MyDictionary{dictionary={a=(1, int), v=IntValue{val=10}}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=22}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={a=(1, int), v=IntValue{val=10}}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=22}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=32}};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))), HeapWriting{varName='a', expression=ValueExp{e=IntValue{val=30}}}]}
, symTable=MyDictionary{dictionary={a=(1, int), v=IntValue{val=10}}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=22}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={a=(1, int), v=IntValue{val=10}}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=22}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=32}};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))), HeapWriting{varName='a', expression=ValueExp{e=IntValue{val=30}}}]}
, symTable=MyDictionary{dictionary={a=(1, int), v=IntValue{val=10}}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=22}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(1, int), v=IntValue{val=10}}}
, out=IntValue{val=10} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=30}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=32}};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}})))]}
, symTable=MyDictionary{dictionary={a=(1, int), v=IntValue{val=10}}}
, out=IntValue{val=10} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=30}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(1, int), v=IntValue{val=10}}}
, out=IntValue{val=10} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=30}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=32}};(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}})))]}
, symTable=MyDictionary{dictionary={a=(1, int), v=IntValue{val=10}}}
, out=IntValue{val=10} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=30}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(1, int), v=IntValue{val=10}}}
, out=IntValue{val=10} IntValue{val=30} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=30}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}})), v=ValueExp{e=IntValue{val=32}}]}
, symTable=MyDictionary{dictionary={a=(1, int), v=IntValue{val=10}}}
, out=IntValue{val=10} IntValue{val=30} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=30}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}})), v=ValueExp{e=IntValue{val=32}}]}
, symTable=MyDictionary{dictionary={a=(1, int), v=IntValue{val=10}}}
, out=IntValue{val=10} IntValue{val=30} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=30}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(1, int), v=IntValue{val=32}}}
, out=IntValue{val=10} IntValue{val=30} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=30}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(VarExp{id='v'});print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(1, int), v=IntValue{val=32}}}
, out=IntValue{val=10} IntValue{val=30} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=30}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={a=(1, int), v=IntValue{val=32}}}
, out=IntValue{val=10} IntValue{val=30} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=30}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={a=(1, int), v=IntValue{val=32}}}
, out=IntValue{val=10} IntValue{val=30} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=30}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(1, int), v=IntValue{val=32}}}
, out=IntValue{val=10} IntValue{val=30} IntValue{val=32} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=30}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(1, int), v=IntValue{val=32}}}
, out=IntValue{val=10} IntValue{val=30} IntValue{val=32} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=30}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(1, int), v=IntValue{val=32}}}
, out=IntValue{val=10} IntValue{val=30} IntValue{val=32} IntValue{val=30} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=30}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=(int);(v=ValueExp{e=IntValue{val=0}};(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))))]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))), v=(int)]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))), v=(int)]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))), v=ValueExp{e=IntValue{val=0}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))), v=ValueExp{e=IntValue{val=0}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), ((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}});(WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), ((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}});(WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))), x=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=-1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))), x=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))), y=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))), y=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))), z=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))), z=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), w=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), w=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))), x=ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))), x=ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))), y=ValueExp{e=IntValue{val=2}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))), y=ValueExp{e=IntValue{val=2}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})), z=ValueExp{e=IntValue{val=3}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})), z=ValueExp{e=IntValue{val=3}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}), w=ValueExp{e=IntValue{val=4}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}), w=ValueExp{e=IntValue{val=4}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=4}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=4}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=4}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=10} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=(int);(v=ValueExp{e=IntValue{val=0}};(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))))]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))), v=(int)]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))), v=(int)]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))), v=ValueExp{e=IntValue{val=0}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))), v=ValueExp{e=IntValue{val=0}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), ((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}});(WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), ((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}});(WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))), x=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=-1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))), x=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))), y=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))), y=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))), z=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))), z=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), w=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), w=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))), x=ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))), x=ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))), y=ValueExp{e=IntValue{val=2}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))), y=ValueExp{e=IntValue{val=2}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})), z=ValueExp{e=IntValue{val=3}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})), z=ValueExp{e=IntValue{val=3}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=(int);(x=(int);(y=(int);(v=ValueExp{e=IntValue{val=0}};(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=ValueExp{e=IntValue{val=1}};(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(null))))))))))]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(v=ValueExp{e=IntValue{val=0}};(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=ValueExp{e=IntValue{val=1}};(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(null))))))))), v=(int)]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(v=ValueExp{e=IntValue{val=0}};(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=ValueExp{e=IntValue{val=1}};(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(null))))))))), v=(int)]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(v=ValueExp{e=IntValue{val=0}};(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=ValueExp{e=IntValue{val=1}};(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(null)))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(v=ValueExp{e=IntValue{val=0}};(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=ValueExp{e=IntValue{val=1}};(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(null)))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(v=ValueExp{e=IntValue{val=0}};(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=ValueExp{e=IntValue{val=1}};(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(null)))))))), x=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(v=ValueExp{e=IntValue{val=0}};(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=ValueExp{e=IntValue{val=1}};(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(null)))))))), x=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(v=ValueExp{e=IntValue{val=0}};(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=ValueExp{e=IntValue{val=1}};(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(null))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}, x=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(v=ValueExp{e=IntValue{val=0}};(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=ValueExp{e=IntValue{val=1}};(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(null))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}, x=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=ValueExp{e=IntValue{val=1}};(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(null))))))), y=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}, x=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=ValueExp{e=IntValue{val=1}};(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(null))))))), y=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}, x=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=ValueExp{e=IntValue{val=1}};(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(null)))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=ValueExp{e=IntValue{val=1}};(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(null)))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=ValueExp{e=IntValue{val=1}};(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(null)))))), v=ValueExp{e=IntValue{val=0}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=ValueExp{e=IntValue{val=1}};(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(null)))))), v=ValueExp{e=IntValue{val=0}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=ValueExp{e=IntValue{val=1}};(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(null))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=ValueExp{e=IntValue{val=1}};(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(null))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(null))))), RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(null))))), RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(null))))), ((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}});(WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(null))))), ((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}});(WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(null))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(null))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(null))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(null))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(null))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(null))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(null))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(null))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(null)))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(null)))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(null)))), x=ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=-1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(null)))), x=ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(null))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(null))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=3}};(No operations;print(null))), No operations]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=3}};(No operations;print(null))), No operations]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=3}};(No operations;print(null)))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=3}};(No operations;print(null)))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(No operations;print(null)), y=ValueExp{e=IntValue{val=3}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(No operations;print(null)), y=ValueExp{e=IntValue{val=3}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(No operations;print(null))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}, y=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(No operations;print(null))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}, y=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(null), No operations]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}, y=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(null), No operations]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}, y=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(null)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}, y=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(null)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}, y=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}, y=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=(int);(v=ValueExp{e=IntValue{val=0}};(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(null))))))))]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(null))))))), v=(int)]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(null))))))), v=(int)]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(null)))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(null)))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(null)))))), v=ValueExp{e=IntValue{val=0}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(null)))))), v=ValueExp{e=IntValue{val=0}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(null))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(null))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(null))))), RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(null))))), RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(null))))), ((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}});(WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(null))))), ((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}});(WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(null))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(null))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(null))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(null))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(null))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(null))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(null))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(null))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(null)))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(null)))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(null)))), x=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=-1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(null)))), x=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(null))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(null))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(y=ValueExp{e=IntValue{val=3}};print(null))), x=ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(y=ValueExp{e=IntValue{val=3}};print(null))), x=ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(y=ValueExp{e=IntValue{val=3}};print(null)))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(y=ValueExp{e=IntValue{val=3}};print(null)))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=3}};print(null)), y=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=3}};print(null)), y=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=3}};print(null))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=3}};print(null))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(null), y=ValueExp{e=IntValue{val=3}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(null), y=ValueExp{e=IntValue{val=3}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(null)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}, y=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(null)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}, y=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}, y=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=(int);(v=ValueExp{e=IntValue{val=0}};(repeat((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})) until (VarExp{id='v'} == ValueExp{e=IntValue{val=3}});(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(repeat((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})) until (VarExp{id='v'} == ValueExp{e=IntValue{val=3}});(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))), v=(int)]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(repeat((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})) until (VarExp{id='v'} == ValueExp{e=IntValue{val=3}});(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))), v=(int)]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(repeat((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})) until (VarExp{id='v'} == ValueExp{e=IntValue{val=3}});(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(repeat((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})) until (VarExp{id='v'} == ValueExp{e=IntValue{val=3}});(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(repeat((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})) until (VarExp{id='v'} == ValueExp{e=IntValue{val=3}});(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))), v=ValueExp{e=IntValue{val=0}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(repeat((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})) until (VarExp{id='v'} == ValueExp{e=IntValue{val=3}});(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))), v=ValueExp{e=IntValue{val=0}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(repeat((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})) until (VarExp{id='v'} == ValueExp{e=IntValue{val=3}});(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(repeat((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})) until (VarExp{id='v'} == ValueExp{e=IntValue{val=3}});(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), repeat((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})) until (VarExp{id='v'} == ValueExp{e=IntValue{val=3}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), repeat((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})) until (VarExp{id='v'} == ValueExp{e=IntValue{val=3}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), ((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}});(WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), ((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}});(WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))), x=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=-1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))), x=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))), x=ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))), x=ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})), y=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})), y=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}), y=ValueExp{e=IntValue{val=3}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}), y=ValueExp{e=IntValue{val=3}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}, y=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}, y=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}, y=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=10} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=(int);(v=ValueExp{e=IntValue{val=0}};(repeat((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})) until (VarExp{id='v'} == ValueExp{e=IntValue{val=3}});(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))))]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(repeat((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})) until (VarExp{id='v'} == ValueExp{e=IntValue{val=3}});(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))), v=(int)]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(repeat((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})) until (VarExp{id='v'} == ValueExp{e=IntValue{val=3}});(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))), v=(int)]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(repeat((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})) until (VarExp{id='v'} == ValueExp{e=IntValue{val=3}});(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(repeat((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})) until (VarExp{id='v'} == ValueExp{e=IntValue{val=3}});(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(repeat((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})) until (VarExp{id='v'} == ValueExp{e=IntValue{val=3}});(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))), v=ValueExp{e=IntValue{val=0}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(repeat((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})) until (VarExp{id='v'} == ValueExp{e=IntValue{val=3}});(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))), v=ValueExp{e=IntValue{val=0}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(repeat((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})) until (VarExp{id='v'} == ValueExp{e=IntValue{val=3}});(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(repeat((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})) until (VarExp{id='v'} == ValueExp{e=IntValue{val=3}});(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), repeat((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})) until (VarExp{id='v'} == ValueExp{e=IntValue{val=3}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), repeat((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})) until (VarExp{id='v'} == ValueExp{e=IntValue{val=3}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), ((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}});(WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), ((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}});(WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))), x=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=-1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))), x=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))), y=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))), y=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))), z=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))), z=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), w=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), w=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))), x=ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))), x=ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))), y=ValueExp{e=IntValue{val=2}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))), y=ValueExp{e=IntValue{val=2}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})), z=ValueExp{e=IntValue{val=3}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})), z=ValueExp{e=IntValue{val=3}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}), w=ValueExp{e=IntValue{val=4}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}), w=ValueExp{e=IntValue{val=4}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=4}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=4}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=4}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=10} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=(int);(v=ValueExp{e=IntValue{val=0}};(repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))))]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))), v=(int)]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))), v=(int)]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))), v=ValueExp{e=IntValue{val=0}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))), v=ValueExp{e=IntValue{val=0}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), ((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}});(WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), ((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}});(WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))), x=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=-1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))), x=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))), y=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))), y=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))), z=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))), z=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), w=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), w=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))), x=ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))), x=ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))), y=ValueExp{e=IntValue{val=2}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))), y=ValueExp{e=IntValue{val=2}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})), z=ValueExp{e=IntValue{val=3}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})), z=ValueExp{e=IntValue{val=3}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}), w=ValueExp{e=IntValue{val=4}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}), w=ValueExp{e=IntValue{val=4}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=4}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=4}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=4}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=10} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
