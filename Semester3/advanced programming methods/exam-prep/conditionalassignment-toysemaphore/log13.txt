ProgramState{id=1
exeStack=MyStack{stack=[(counter=(int);(a=(RefType{inner=int});((WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}));print(VarExp{id='counter'}))))]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(a=(RefType{inner=int});((WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}));print(VarExp{id='counter'}))), counter=(int)]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(a=(RefType{inner=int});((WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}));print(VarExp{id='counter'}))), counter=(int)]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(a=(RefType{inner=int});((WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}));print(VarExp{id='counter'})))]}
, symTable=MyDictionary{dictionary={counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(a=(RefType{inner=int});((WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}));print(VarExp{id='counter'})))]}
, symTable=MyDictionary{dictionary={counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[((WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}));print(VarExp{id='counter'})), a=(RefType{inner=int})]}
, symTable=MyDictionary{dictionary={counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[((WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}));print(VarExp{id='counter'})), a=(RefType{inner=int})]}
, symTable=MyDictionary{dictionary={counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[((WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}));print(VarExp{id='counter'}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[((WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}));print(VarExp{id='counter'}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=3
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=3
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=0}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(1, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=0}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=0}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(1, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=0}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=0}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(1, int), counter=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=0}}, freeAddress=2}

}
ProgramState{id=4
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=0}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=4
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=4
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=5
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=5
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=5
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=5
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={2=IntValue{val=1}}, freeAddress=3}

}
ProgramState{id=5
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(2, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={2=IntValue{val=1}}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={2=IntValue{val=1}}, freeAddress=3}

}
ProgramState{id=5
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(2, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={2=IntValue{val=1}}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={2=IntValue{val=1}}, freeAddress=3}

}
ProgramState{id=5
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(2, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={2=IntValue{val=1}}, freeAddress=3}

}
ProgramState{id=6
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={2=IntValue{val=1}}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=6
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=6
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=7
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=7
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=7
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=7
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={3=IntValue{val=2}}, freeAddress=4}

}
ProgramState{id=7
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(3, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={3=IntValue{val=2}}, freeAddress=4}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={3=IntValue{val=2}}, freeAddress=4}

}
ProgramState{id=7
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(3, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={3=IntValue{val=2}}, freeAddress=4}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={3=IntValue{val=2}}, freeAddress=4}

}
ProgramState{id=7
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(3, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={3=IntValue{val=2}}, freeAddress=4}

}
ProgramState{id=8
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={3=IntValue{val=2}}, freeAddress=4}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=8
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=8
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=9
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=9
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=9
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=9
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={4=IntValue{val=3}}, freeAddress=5}

}
ProgramState{id=9
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(4, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={4=IntValue{val=3}}, freeAddress=5}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={4=IntValue{val=3}}, freeAddress=5}

}
ProgramState{id=9
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(4, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={4=IntValue{val=3}}, freeAddress=5}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={4=IntValue{val=3}}, freeAddress=5}

}
ProgramState{id=9
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(4, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={4=IntValue{val=3}}, freeAddress=5}

}
ProgramState{id=10
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={4=IntValue{val=3}}, freeAddress=5}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=10
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=10
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=11
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=11
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=11
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=11
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={5=IntValue{val=4}}, freeAddress=6}

}
ProgramState{id=11
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(5, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={5=IntValue{val=4}}, freeAddress=6}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={5=IntValue{val=4}}, freeAddress=6}

}
ProgramState{id=11
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(5, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={5=IntValue{val=4}}, freeAddress=6}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={5=IntValue{val=4}}, freeAddress=6}

}
ProgramState{id=11
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(5, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={5=IntValue{val=4}}, freeAddress=6}

}
ProgramState{id=12
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={5=IntValue{val=4}}, freeAddress=6}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=12
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=12
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=13
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=13
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=13
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=13
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={6=IntValue{val=5}}, freeAddress=7}

}
ProgramState{id=13
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(6, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={6=IntValue{val=5}}, freeAddress=7}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={6=IntValue{val=5}}, freeAddress=7}

}
ProgramState{id=13
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(6, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={6=IntValue{val=5}}, freeAddress=7}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={6=IntValue{val=5}}, freeAddress=7}

}
ProgramState{id=13
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(6, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={6=IntValue{val=5}}, freeAddress=7}

}
ProgramState{id=14
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={6=IntValue{val=5}}, freeAddress=7}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=14
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=14
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=15
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=15
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=15
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=15
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={7=IntValue{val=6}}, freeAddress=8}

}
ProgramState{id=15
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(7, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={7=IntValue{val=6}}, freeAddress=8}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={7=IntValue{val=6}}, freeAddress=8}

}
ProgramState{id=15
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(7, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={7=IntValue{val=6}}, freeAddress=8}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={7=IntValue{val=6}}, freeAddress=8}

}
ProgramState{id=15
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(7, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={7=IntValue{val=6}}, freeAddress=8}

}
ProgramState{id=16
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={7=IntValue{val=6}}, freeAddress=8}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=16
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=16
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=17
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=17
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=17
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=17
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={8=IntValue{val=7}}, freeAddress=9}

}
ProgramState{id=17
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(8, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={8=IntValue{val=7}}, freeAddress=9}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={8=IntValue{val=7}}, freeAddress=9}

}
ProgramState{id=17
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(8, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={8=IntValue{val=7}}, freeAddress=9}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={8=IntValue{val=7}}, freeAddress=9}

}
ProgramState{id=17
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(8, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={8=IntValue{val=7}}, freeAddress=9}

}
ProgramState{id=18
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={8=IntValue{val=7}}, freeAddress=9}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=18
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=18
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=19
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=19
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=19
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=19
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={9=IntValue{val=8}}, freeAddress=10}

}
ProgramState{id=19
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(9, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={9=IntValue{val=8}}, freeAddress=10}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={9=IntValue{val=8}}, freeAddress=10}

}
ProgramState{id=19
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(9, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={9=IntValue{val=8}}, freeAddress=10}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={9=IntValue{val=8}}, freeAddress=10}

}
ProgramState{id=19
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(9, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={9=IntValue{val=8}}, freeAddress=10}

}
ProgramState{id=20
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={9=IntValue{val=8}}, freeAddress=10}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=20
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=10}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=20
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=21
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=10}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=21
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=10}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=21
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=10}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=21
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=1
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=10}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=10} 
, File Table[]
MyHeap{heapMap={10=IntValue{val=9}}, freeAddress=11}

}
ProgramState{id=21
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(10, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=10} 
, File Table[]
MyHeap{heapMap={10=IntValue{val=9}}, freeAddress=11}

}
ProgramState{id=21
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(10, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=10} 
, File Table[]
MyHeap{heapMap={10=IntValue{val=9}}, freeAddress=11}

}
ProgramState{id=21
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(10, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=10} IntValue{val=9} 
, File Table[]
MyHeap{heapMap={10=IntValue{val=9}}, freeAddress=11}

}
ProgramState{id=1
exeStack=MyStack{stack=[(counter=(int);(a=(RefType{inner=int});((WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}));print(VarExp{id='counter'}))))]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(a=(RefType{inner=int});((WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}));print(VarExp{id='counter'}))), counter=(int)]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(a=(RefType{inner=int});((WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}));print(VarExp{id='counter'}))), counter=(int)]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(a=(RefType{inner=int});((WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}));print(VarExp{id='counter'})))]}
, symTable=MyDictionary{dictionary={counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(a=(RefType{inner=int});((WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}));print(VarExp{id='counter'})))]}
, symTable=MyDictionary{dictionary={counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[((WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}));print(VarExp{id='counter'})), a=(RefType{inner=int})]}
, symTable=MyDictionary{dictionary={counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[((WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}));print(VarExp{id='counter'})), a=(RefType{inner=int})]}
, symTable=MyDictionary{dictionary={counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[((WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}));print(VarExp{id='counter'}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[((WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}));print(VarExp{id='counter'}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=3
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=3
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=0}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(1, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=0}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=0}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(1, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=0}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=0}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(1, int), counter=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=0}}, freeAddress=2}

}
ProgramState{id=4
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=0}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=4
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=4
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=5
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=5
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=5
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=5
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={2=IntValue{val=1}}, freeAddress=3}

}
ProgramState{id=5
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(2, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={2=IntValue{val=1}}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={2=IntValue{val=1}}, freeAddress=3}

}
ProgramState{id=5
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(2, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={2=IntValue{val=1}}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={2=IntValue{val=1}}, freeAddress=3}

}
ProgramState{id=5
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(2, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={2=IntValue{val=1}}, freeAddress=3}

}
ProgramState{id=6
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={2=IntValue{val=1}}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=6
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=6
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=7
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=7
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=7
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=7
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={3=IntValue{val=2}}, freeAddress=4}

}
ProgramState{id=7
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(3, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={3=IntValue{val=2}}, freeAddress=4}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={3=IntValue{val=2}}, freeAddress=4}

}
ProgramState{id=7
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(3, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={3=IntValue{val=2}}, freeAddress=4}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={3=IntValue{val=2}}, freeAddress=4}

}
ProgramState{id=7
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(3, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={3=IntValue{val=2}}, freeAddress=4}

}
ProgramState{id=8
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={3=IntValue{val=2}}, freeAddress=4}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=8
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=8
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=9
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=9
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=9
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=9
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={4=IntValue{val=3}}, freeAddress=5}

}
ProgramState{id=9
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(4, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={4=IntValue{val=3}}, freeAddress=5}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={4=IntValue{val=3}}, freeAddress=5}

}
ProgramState{id=9
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(4, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={4=IntValue{val=3}}, freeAddress=5}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={4=IntValue{val=3}}, freeAddress=5}

}
ProgramState{id=9
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(4, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={4=IntValue{val=3}}, freeAddress=5}

}
ProgramState{id=10
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={4=IntValue{val=3}}, freeAddress=5}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=10
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=10
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=11
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=11
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=11
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=11
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={5=IntValue{val=4}}, freeAddress=6}

}
ProgramState{id=11
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(5, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={5=IntValue{val=4}}, freeAddress=6}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={5=IntValue{val=4}}, freeAddress=6}

}
ProgramState{id=11
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(5, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={5=IntValue{val=4}}, freeAddress=6}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={5=IntValue{val=4}}, freeAddress=6}

}
ProgramState{id=11
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(5, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={5=IntValue{val=4}}, freeAddress=6}

}
ProgramState{id=12
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={5=IntValue{val=4}}, freeAddress=6}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=12
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=12
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=13
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=13
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=13
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=13
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={6=IntValue{val=5}}, freeAddress=7}

}
ProgramState{id=13
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(6, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={6=IntValue{val=5}}, freeAddress=7}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={6=IntValue{val=5}}, freeAddress=7}

}
ProgramState{id=13
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(6, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={6=IntValue{val=5}}, freeAddress=7}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={6=IntValue{val=5}}, freeAddress=7}

}
ProgramState{id=13
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(6, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={6=IntValue{val=5}}, freeAddress=7}

}
ProgramState{id=14
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={6=IntValue{val=5}}, freeAddress=7}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=14
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=14
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=15
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=15
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=15
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=15
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={7=IntValue{val=6}}, freeAddress=8}

}
ProgramState{id=15
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(7, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={7=IntValue{val=6}}, freeAddress=8}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={7=IntValue{val=6}}, freeAddress=8}

}
ProgramState{id=15
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(7, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={7=IntValue{val=6}}, freeAddress=8}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={7=IntValue{val=6}}, freeAddress=8}

}
ProgramState{id=15
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(7, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={7=IntValue{val=6}}, freeAddress=8}

}
ProgramState{id=16
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={7=IntValue{val=6}}, freeAddress=8}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=16
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=16
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=17
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=17
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=17
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=17
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={8=IntValue{val=7}}, freeAddress=9}

}
ProgramState{id=17
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(8, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={8=IntValue{val=7}}, freeAddress=9}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={8=IntValue{val=7}}, freeAddress=9}

}
ProgramState{id=17
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(8, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={8=IntValue{val=7}}, freeAddress=9}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={8=IntValue{val=7}}, freeAddress=9}

}
ProgramState{id=17
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(8, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={8=IntValue{val=7}}, freeAddress=9}

}
ProgramState{id=18
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={8=IntValue{val=7}}, freeAddress=9}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=18
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=18
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=19
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=19
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=19
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=19
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={9=IntValue{val=8}}, freeAddress=10}

}
ProgramState{id=19
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(9, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={9=IntValue{val=8}}, freeAddress=10}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={9=IntValue{val=8}}, freeAddress=10}

}
ProgramState{id=19
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(9, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={9=IntValue{val=8}}, freeAddress=10}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={9=IntValue{val=8}}, freeAddress=10}

}
ProgramState{id=19
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(9, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={9=IntValue{val=8}}, freeAddress=10}

}
ProgramState{id=20
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={9=IntValue{val=8}}, freeAddress=10}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=20
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=10}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=20
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=21
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=10}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=21
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=10}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=21
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=10}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=21
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=1
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=10}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=10} 
, File Table[]
MyHeap{heapMap={10=IntValue{val=9}}, freeAddress=11}

}
ProgramState{id=21
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(10, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=10} 
, File Table[]
MyHeap{heapMap={10=IntValue{val=9}}, freeAddress=11}

}
ProgramState{id=21
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(10, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=10} 
, File Table[]
MyHeap{heapMap={10=IntValue{val=9}}, freeAddress=11}

}
ProgramState{id=21
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(10, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=10} IntValue{val=9} 
, File Table[]
MyHeap{heapMap={10=IntValue{val=9}}, freeAddress=11}

}
ProgramState{id=1
exeStack=MyStack{stack=[(counter=(int);(a=(RefType{inner=int});((WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}));print(VarExp{id='counter'}))))]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(a=(RefType{inner=int});((WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}));print(VarExp{id='counter'}))), counter=(int)]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(a=(RefType{inner=int});((WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}));print(VarExp{id='counter'}))), counter=(int)]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(a=(RefType{inner=int});((WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}));print(VarExp{id='counter'})))]}
, symTable=MyDictionary{dictionary={counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(a=(RefType{inner=int});((WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}));print(VarExp{id='counter'})))]}
, symTable=MyDictionary{dictionary={counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[((WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}));print(VarExp{id='counter'})), a=(RefType{inner=int})]}
, symTable=MyDictionary{dictionary={counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[((WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}));print(VarExp{id='counter'})), a=(RefType{inner=int})]}
, symTable=MyDictionary{dictionary={counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[((WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}));print(VarExp{id='counter'}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[((WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}));print(VarExp{id='counter'}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=3
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=3
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=0}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(1, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=0}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=0}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(1, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=0}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=0}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(1, int), counter=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=0}}, freeAddress=2}

}
ProgramState{id=4
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=0}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=4
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=4
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=5
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=5
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=5
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=5
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={2=IntValue{val=1}}, freeAddress=3}

}
ProgramState{id=5
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(2, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={2=IntValue{val=1}}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={2=IntValue{val=1}}, freeAddress=3}

}
ProgramState{id=5
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(2, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={2=IntValue{val=1}}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={2=IntValue{val=1}}, freeAddress=3}

}
ProgramState{id=5
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(2, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={2=IntValue{val=1}}, freeAddress=3}

}
ProgramState{id=6
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={2=IntValue{val=1}}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=6
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=6
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=7
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=7
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=7
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=7
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={3=IntValue{val=2}}, freeAddress=4}

}
ProgramState{id=7
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(3, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={3=IntValue{val=2}}, freeAddress=4}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={3=IntValue{val=2}}, freeAddress=4}

}
ProgramState{id=7
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(3, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={3=IntValue{val=2}}, freeAddress=4}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={3=IntValue{val=2}}, freeAddress=4}

}
ProgramState{id=7
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(3, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={3=IntValue{val=2}}, freeAddress=4}

}
ProgramState{id=8
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={3=IntValue{val=2}}, freeAddress=4}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=8
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=8
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=9
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=9
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=9
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=9
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={4=IntValue{val=3}}, freeAddress=5}

}
ProgramState{id=9
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(4, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={4=IntValue{val=3}}, freeAddress=5}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={4=IntValue{val=3}}, freeAddress=5}

}
ProgramState{id=9
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(4, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={4=IntValue{val=3}}, freeAddress=5}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={4=IntValue{val=3}}, freeAddress=5}

}
ProgramState{id=9
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(4, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={4=IntValue{val=3}}, freeAddress=5}

}
ProgramState{id=10
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={4=IntValue{val=3}}, freeAddress=5}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=10
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=10
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=11
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=11
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=11
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=11
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={5=IntValue{val=4}}, freeAddress=6}

}
ProgramState{id=11
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(5, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={5=IntValue{val=4}}, freeAddress=6}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={5=IntValue{val=4}}, freeAddress=6}

}
ProgramState{id=11
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(5, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={5=IntValue{val=4}}, freeAddress=6}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={5=IntValue{val=4}}, freeAddress=6}

}
ProgramState{id=11
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(5, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={5=IntValue{val=4}}, freeAddress=6}

}
ProgramState{id=12
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={5=IntValue{val=4}}, freeAddress=6}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=12
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=12
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=13
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=13
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=13
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=13
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={6=IntValue{val=5}}, freeAddress=7}

}
ProgramState{id=13
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(6, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={6=IntValue{val=5}}, freeAddress=7}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={6=IntValue{val=5}}, freeAddress=7}

}
ProgramState{id=13
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(6, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={6=IntValue{val=5}}, freeAddress=7}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={6=IntValue{val=5}}, freeAddress=7}

}
ProgramState{id=13
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(6, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={6=IntValue{val=5}}, freeAddress=7}

}
ProgramState{id=14
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={6=IntValue{val=5}}, freeAddress=7}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=14
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=14
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=15
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=15
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=15
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=15
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={7=IntValue{val=6}}, freeAddress=8}

}
ProgramState{id=15
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(7, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={7=IntValue{val=6}}, freeAddress=8}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={7=IntValue{val=6}}, freeAddress=8}

}
ProgramState{id=15
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(7, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={7=IntValue{val=6}}, freeAddress=8}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={7=IntValue{val=6}}, freeAddress=8}

}
ProgramState{id=15
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(7, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={7=IntValue{val=6}}, freeAddress=8}

}
ProgramState{id=16
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={7=IntValue{val=6}}, freeAddress=8}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=16
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=16
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=17
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=17
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=17
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=17
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={8=IntValue{val=7}}, freeAddress=9}

}
ProgramState{id=17
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(8, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={8=IntValue{val=7}}, freeAddress=9}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={8=IntValue{val=7}}, freeAddress=9}

}
ProgramState{id=17
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(8, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={8=IntValue{val=7}}, freeAddress=9}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={8=IntValue{val=7}}, freeAddress=9}

}
ProgramState{id=17
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(8, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={8=IntValue{val=7}}, freeAddress=9}

}
ProgramState{id=18
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={8=IntValue{val=7}}, freeAddress=9}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=18
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=18
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=19
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=19
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=19
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=19
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={9=IntValue{val=8}}, freeAddress=10}

}
ProgramState{id=19
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(9, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={9=IntValue{val=8}}, freeAddress=10}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={9=IntValue{val=8}}, freeAddress=10}

}
ProgramState{id=19
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(9, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={9=IntValue{val=8}}, freeAddress=10}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={9=IntValue{val=8}}, freeAddress=10}

}
ProgramState{id=19
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(9, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={9=IntValue{val=8}}, freeAddress=10}

}
ProgramState{id=20
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={9=IntValue{val=8}}, freeAddress=10}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=20
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=10}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=20
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=21
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=10}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=21
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=10}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=21
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=10}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=21
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=1
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=10}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=10} 
, File Table[]
MyHeap{heapMap={10=IntValue{val=9}}, freeAddress=11}

}
ProgramState{id=21
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(10, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=10} 
, File Table[]
MyHeap{heapMap={10=IntValue{val=9}}, freeAddress=11}

}
ProgramState{id=21
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(10, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=10} 
, File Table[]
MyHeap{heapMap={10=IntValue{val=9}}, freeAddress=11}

}
ProgramState{id=21
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(10, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=10} IntValue{val=9} 
, File Table[]
MyHeap{heapMap={10=IntValue{val=9}}, freeAddress=11}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v1=(RefType{inner=int});(cnt=(int);(HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}};(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(null);ToyRelease (cnt)))))))))]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(cnt=(int);(HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}};(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(null);ToyRelease (cnt)))))))), v1=(RefType{inner=int})]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(cnt=(int);(HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}};(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(null);ToyRelease (cnt)))))))), v1=(RefType{inner=int})]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(cnt=(int);(HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}};(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(null);ToyRelease (cnt))))))))]}
, symTable=MyDictionary{dictionary={v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(cnt=(int);(HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}};(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(null);ToyRelease (cnt))))))))]}
, symTable=MyDictionary{dictionary={v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}};(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(null);ToyRelease (cnt))))))), cnt=(int)]}
, symTable=MyDictionary{dictionary={v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}};(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(null);ToyRelease (cnt))))))), cnt=(int)]}
, symTable=MyDictionary{dictionary={v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}};(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(null);ToyRelease (cnt)))))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}};(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(null);ToyRelease (cnt)))))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(null);ToyRelease (cnt)))))), HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(null);ToyRelease (cnt)))))), HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(null);ToyRelease (cnt))))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(null);ToyRelease (cnt))))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(null);ToyRelease (cnt))))), NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(null);ToyRelease (cnt))))), NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(null);ToyRelease (cnt)))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(null);ToyRelease (cnt)))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(null);ToyRelease (cnt)))), ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(null);ToyRelease (cnt)))), ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(null);ToyRelease (cnt))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(null);ToyRelease (cnt))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ToyAcquire(cnt);(print(null);ToyRelease (cnt))), ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ToyAcquire(cnt);(print(null);ToyRelease (cnt))), ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ToyAcquire(cnt);(print(null);ToyRelease (cnt)))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ToyAcquire(cnt);(print(null);ToyRelease (cnt)))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(null);ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)), HeapWriting{varName='v1', expression=null}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(null);ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)), HeapWriting{varName='v1', expression=null}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(null);ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(null);ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(null);ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[ToyRelease (cnt), print(HeapReading{expression=VarExp{id='v1'}})]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(null);ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[ToyRelease (cnt), print(HeapReading{expression=VarExp{id='v1'}})]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(null);ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[ToyRelease (cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(null);ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[ToyRelease (cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(null);ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(null);ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(null);ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(null);ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(null);ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(null);ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(null);ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(null);ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(null);ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(null);ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(null);ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(null);ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(null);ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(null);ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(null);ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(null);ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(null);ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(null);ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(null);ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(null);ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(null);ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(null);ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(null);ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(null);ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(null);ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(null);ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(null);ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(null);ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(null);ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(null);ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(null);ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(null);ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(null);ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(null);ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(null);ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(null);ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(null);ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(null);ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(null);ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(null);ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(null);ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(null);ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(null);ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(null);ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(null);ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(null);ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(null);ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};((HeapWriting{varName='v1', expression=null};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=2} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v1=(RefType{inner=int});(cnt=(int);(HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}};(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))))))]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(cnt=(int);(HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}};(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))))), v1=(RefType{inner=int})]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(cnt=(int);(HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}};(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))))), v1=(RefType{inner=int})]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(cnt=(int);(HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}};(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))))))]}
, symTable=MyDictionary{dictionary={v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(cnt=(int);(HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}};(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))))))]}
, symTable=MyDictionary{dictionary={v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}};(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))))), cnt=(int)]}
, symTable=MyDictionary{dictionary={v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}};(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))))), cnt=(int)]}
, symTable=MyDictionary{dictionary={v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}};(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}};(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))), HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))), HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))), NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))), NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))), ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))), ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))), ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))), ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)), HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)), HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[ToyRelease (cnt), print(HeapReading{expression=VarExp{id='v1'}})]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[ToyRelease (cnt), print(HeapReading{expression=VarExp{id='v1'}})]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[ToyRelease (cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[ToyRelease (cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v1=(RefType{inner=int});(cnt=(int);(HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}};(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))))))]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(cnt=(int);(HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}};(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))))), v1=(RefType{inner=int})]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(cnt=(int);(HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}};(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))))), v1=(RefType{inner=int})]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(cnt=(int);(HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}};(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))))))]}
, symTable=MyDictionary{dictionary={v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(cnt=(int);(HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}};(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))))))]}
, symTable=MyDictionary{dictionary={v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}};(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))))), cnt=(int)]}
, symTable=MyDictionary{dictionary={v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}};(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))))), cnt=(int)]}
, symTable=MyDictionary{dictionary={v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}};(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}};(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))), HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))), HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))), NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))), NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))), ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))), ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))), ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))), ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)), HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)), HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[ToyRelease (cnt), print(HeapReading{expression=VarExp{id='v1'}})]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[ToyRelease (cnt), print(HeapReading{expression=VarExp{id='v1'}})]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[ToyRelease (cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[ToyRelease (cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt)))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt)))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt)), HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt)), HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=200}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=200}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=200}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=200}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=200}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[ToyRelease (cnt), (HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=200}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=200}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[ToyRelease (cnt), (HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=200}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=200}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[ToyRelease (cnt), print(HeapReading{expression=VarExp{id='v1'}}), HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=200}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=200}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[ToyRelease (cnt), print(HeapReading{expression=VarExp{id='v1'}}), HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=200}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=400}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[ToyRelease (cnt), print(HeapReading{expression=VarExp{id='v1'}})]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=400}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=400}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[ToyRelease (cnt), print(HeapReading{expression=VarExp{id='v1'}})]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=400}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=400} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=400}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[ToyRelease (cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=400} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=400}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=400} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=400}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[ToyRelease (cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=400} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=400}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=400} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=400}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=400} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=400}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=400} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=400}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=400} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=400}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=400} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=400}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[ToyRelease (cnt), print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=400} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=400}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[ToyRelease (cnt), print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=400} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=400}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[ToyRelease (cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=400} IntValue{val=399} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=400}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[ToyRelease (cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=400} IntValue{val=399} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=400}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=400} IntValue{val=399} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=400}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v1=(RefType{inner=int});(cnt=(int);(new(v1,ValueExp{e=IntValue{val=2}});(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};(HeapWriting{varName='v1', expression=null};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))};(ToyAcquire(cnt);(print(null);ToyRelease (cnt)))))))))]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(cnt=(int);(new(v1,ValueExp{e=IntValue{val=2}});(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};(HeapWriting{varName='v1', expression=null};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))};(ToyAcquire(cnt);(print(null);ToyRelease (cnt)))))))), v1=(RefType{inner=int})]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(cnt=(int);(new(v1,ValueExp{e=IntValue{val=2}});(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};(HeapWriting{varName='v1', expression=null};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))};(ToyAcquire(cnt);(print(null);ToyRelease (cnt)))))))), v1=(RefType{inner=int})]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(cnt=(int);(new(v1,ValueExp{e=IntValue{val=2}});(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};(HeapWriting{varName='v1', expression=null};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))};(ToyAcquire(cnt);(print(null);ToyRelease (cnt))))))))]}
, symTable=MyDictionary{dictionary={v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(cnt=(int);(new(v1,ValueExp{e=IntValue{val=2}});(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};(HeapWriting{varName='v1', expression=null};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))};(ToyAcquire(cnt);(print(null);ToyRelease (cnt))))))))]}
, symTable=MyDictionary{dictionary={v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(new(v1,ValueExp{e=IntValue{val=2}});(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};(HeapWriting{varName='v1', expression=null};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))};(ToyAcquire(cnt);(print(null);ToyRelease (cnt))))))), cnt=(int)]}
, symTable=MyDictionary{dictionary={v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(new(v1,ValueExp{e=IntValue{val=2}});(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};(HeapWriting{varName='v1', expression=null};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))};(ToyAcquire(cnt);(print(null);ToyRelease (cnt))))))), cnt=(int)]}
, symTable=MyDictionary{dictionary={v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(new(v1,ValueExp{e=IntValue{val=2}});(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};(HeapWriting{varName='v1', expression=null};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))};(ToyAcquire(cnt);(print(null);ToyRelease (cnt)))))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(new(v1,ValueExp{e=IntValue{val=2}});(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};(HeapWriting{varName='v1', expression=null};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))};(ToyAcquire(cnt);(print(null);ToyRelease (cnt)))))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};(HeapWriting{varName='v1', expression=null};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))};(ToyAcquire(cnt);(print(null);ToyRelease (cnt)))))), new(v1,ValueExp{e=IntValue{val=2}})]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};(HeapWriting{varName='v1', expression=null};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))};(ToyAcquire(cnt);(print(null);ToyRelease (cnt)))))), new(v1,ValueExp{e=IntValue{val=2}})]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};(HeapWriting{varName='v1', expression=null};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))};(ToyAcquire(cnt);(print(null);ToyRelease (cnt))))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={2=IntValue{val=2}}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};(HeapWriting{varName='v1', expression=null};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))};(ToyAcquire(cnt);(print(null);ToyRelease (cnt))))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};(HeapWriting{varName='v1', expression=null};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))};(ToyAcquire(cnt);(print(null);ToyRelease (cnt))))), NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};(HeapWriting{varName='v1', expression=null};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))};(ToyAcquire(cnt);(print(null);ToyRelease (cnt))))), NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};(HeapWriting{varName='v1', expression=null};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))};(ToyAcquire(cnt);(print(null);ToyRelease (cnt)))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};(HeapWriting{varName='v1', expression=null};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))};(ToyAcquire(cnt);(print(null);ToyRelease (cnt)))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};(HeapWriting{varName='v1', expression=null};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))};(ToyAcquire(cnt);(print(null);ToyRelease (cnt)))), ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};(HeapWriting{varName='v1', expression=null};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))};(ToyAcquire(cnt);(print(null);ToyRelease (cnt)))), ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};(HeapWriting{varName='v1', expression=null};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))};(ToyAcquire(cnt);(print(null);ToyRelease (cnt))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=2
exeStack=MyStack{stack=[(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};(HeapWriting{varName='v1', expression=null};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))};(ToyAcquire(cnt);(print(null);ToyRelease (cnt))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=2
exeStack=MyStack{stack=[(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ToyAcquire(cnt);(print(null);ToyRelease (cnt))), ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};(HeapWriting{varName='v1', expression=null};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=2
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ToyAcquire(cnt);(print(null);ToyRelease (cnt))), ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};(HeapWriting{varName='v1', expression=null};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=2
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ToyAcquire(cnt);(print(null);ToyRelease (cnt)))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=2
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=3
exeStack=MyStack{stack=[(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};(HeapWriting{varName='v1', expression=null};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ToyAcquire(cnt);(print(null);ToyRelease (cnt)))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=2
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=3
exeStack=MyStack{stack=[(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=null};(HeapWriting{varName='v1', expression=null};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(null);ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)), HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};(HeapWriting{varName='v1', expression=null};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(null);ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)), HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};(HeapWriting{varName='v1', expression=null};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(null);ToyRelease (cnt))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};(HeapWriting{varName='v1', expression=null};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(null);ToyRelease (cnt))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};(HeapWriting{varName='v1', expression=null};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[ToyRelease (cnt), print(null)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=2
exeStack=MyStack{stack=[ToyRelease (cnt), print(HeapReading{expression=VarExp{id='v1'}})]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))), HeapWriting{varName='v1', expression=null}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[ToyRelease (cnt), print(null)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=2
exeStack=MyStack{stack=[ToyRelease (cnt), print(HeapReading{expression=VarExp{id='v1'}})]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))), HeapWriting{varName='v1', expression=null}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[ToyRelease (cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=2
exeStack=MyStack{stack=[ToyRelease (cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[ToyRelease (cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=2
exeStack=MyStack{stack=[ToyRelease (cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=null};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=2
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=3
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)), HeapWriting{varName='v1', expression=null}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=3
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)), HeapWriting{varName='v1', expression=null}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=3
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=3
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=3
exeStack=MyStack{stack=[ToyRelease (cnt), print(HeapReading{expression=VarExp{id='v1'}})]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v1=(RefType{inner=int});(cnt=(int);(new(v1,ValueExp{e=IntValue{val=2}});(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))))))]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(cnt=(int);(new(v1,ValueExp{e=IntValue{val=2}});(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))))), v1=(RefType{inner=int})]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(cnt=(int);(new(v1,ValueExp{e=IntValue{val=2}});(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))))), v1=(RefType{inner=int})]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(cnt=(int);(new(v1,ValueExp{e=IntValue{val=2}});(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))))))]}
, symTable=MyDictionary{dictionary={v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(cnt=(int);(new(v1,ValueExp{e=IntValue{val=2}});(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))))))]}
, symTable=MyDictionary{dictionary={v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(new(v1,ValueExp{e=IntValue{val=2}});(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))))), cnt=(int)]}
, symTable=MyDictionary{dictionary={v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(new(v1,ValueExp{e=IntValue{val=2}});(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))))), cnt=(int)]}
, symTable=MyDictionary{dictionary={v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(new(v1,ValueExp{e=IntValue{val=2}});(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(new(v1,ValueExp{e=IntValue{val=2}});(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))), new(v1,ValueExp{e=IntValue{val=2}})]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))), new(v1,ValueExp{e=IntValue{val=2}})]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={2=IntValue{val=2}}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))), NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))), NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))), ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))), ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=2
exeStack=MyStack{stack=[(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=2
exeStack=MyStack{stack=[(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))), ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=2
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))), ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=2
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=2
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=3
exeStack=MyStack{stack=[(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=2
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=3
exeStack=MyStack{stack=[(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)), HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)), HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[ToyRelease (cnt), print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=2
exeStack=MyStack{stack=[ToyRelease (cnt), print(HeapReading{expression=VarExp{id='v1'}})]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))), HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[ToyRelease (cnt), print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=2
exeStack=MyStack{stack=[ToyRelease (cnt), print(HeapReading{expression=VarExp{id='v1'}})]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))), HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[ToyRelease (cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=2
exeStack=MyStack{stack=[ToyRelease (cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[ToyRelease (cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=2
exeStack=MyStack{stack=[ToyRelease (cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=2
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=3
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)), HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=3
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)), HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=3
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=3
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=3
exeStack=MyStack{stack=[ToyRelease (cnt), print(HeapReading{expression=VarExp{id='v1'}})]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=3
exeStack=MyStack{stack=[ToyRelease (cnt), print(HeapReading{expression=VarExp{id='v1'}})]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=3
exeStack=MyStack{stack=[ToyRelease (cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=3
exeStack=MyStack{stack=[ToyRelease (cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=3
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v1=(RefType{inner=int});(cnt=(int);(new(v1,ValueExp{e=IntValue{val=2}});(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))))))]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(cnt=(int);(new(v1,ValueExp{e=IntValue{val=2}});(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))))), v1=(RefType{inner=int})]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(cnt=(int);(new(v1,ValueExp{e=IntValue{val=2}});(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))))), v1=(RefType{inner=int})]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(cnt=(int);(new(v1,ValueExp{e=IntValue{val=2}});(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))))))]}
, symTable=MyDictionary{dictionary={v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(cnt=(int);(new(v1,ValueExp{e=IntValue{val=2}});(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))))))]}
, symTable=MyDictionary{dictionary={v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(new(v1,ValueExp{e=IntValue{val=2}});(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))))), cnt=(int)]}
, symTable=MyDictionary{dictionary={v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(new(v1,ValueExp{e=IntValue{val=2}});(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))))), cnt=(int)]}
, symTable=MyDictionary{dictionary={v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(new(v1,ValueExp{e=IntValue{val=2}});(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(new(v1,ValueExp{e=IntValue{val=2}});(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))), new(v1,ValueExp{e=IntValue{val=2}})]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))), new(v1,ValueExp{e=IntValue{val=2}})]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={2=IntValue{val=2}}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))), NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))), NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))), ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))), ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=2
exeStack=MyStack{stack=[(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=2
exeStack=MyStack{stack=[(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))), ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=2
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))), ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=2
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=2
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=3
exeStack=MyStack{stack=[(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=2
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=3
exeStack=MyStack{stack=[(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)), HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)), HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[ToyRelease (cnt), print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=2
exeStack=MyStack{stack=[ToyRelease (cnt), print(HeapReading{expression=VarExp{id='v1'}})]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))), HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[ToyRelease (cnt), print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=2
exeStack=MyStack{stack=[ToyRelease (cnt), print(HeapReading{expression=VarExp{id='v1'}})]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))), HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[ToyRelease (cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=2
exeStack=MyStack{stack=[ToyRelease (cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[ToyRelease (cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=2
exeStack=MyStack{stack=[ToyRelease (cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=2
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=3
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)), HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=3
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)), HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=3
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=3
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=3
exeStack=MyStack{stack=[ToyRelease (cnt), print(HeapReading{expression=VarExp{id='v1'}})]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=3
exeStack=MyStack{stack=[ToyRelease (cnt), print(HeapReading{expression=VarExp{id='v1'}})]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=3
exeStack=MyStack{stack=[ToyRelease (cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=3
exeStack=MyStack{stack=[ToyRelease (cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=3
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v1=(RefType{inner=int});(cnt=(int);(HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}};(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))))))]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(cnt=(int);(HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}};(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))))), v1=(RefType{inner=int})]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(cnt=(int);(HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}};(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))))), v1=(RefType{inner=int})]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(cnt=(int);(HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}};(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))))))]}
, symTable=MyDictionary{dictionary={v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(cnt=(int);(HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}};(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))))))]}
, symTable=MyDictionary{dictionary={v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}};(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))))), cnt=(int)]}
, symTable=MyDictionary{dictionary={v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}};(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))))), cnt=(int)]}
, symTable=MyDictionary{dictionary={v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}};(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}};(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))), HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))), HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))), NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))), NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))), ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))), ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))), ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))), ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)), HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)), HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[ToyRelease (cnt), print(HeapReading{expression=VarExp{id='v1'}})]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[ToyRelease (cnt), print(HeapReading{expression=VarExp{id='v1'}})]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[ToyRelease (cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[ToyRelease (cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[ToyRelease (cnt), print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[ToyRelease (cnt), print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[ToyRelease (cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[ToyRelease (cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt)))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt)))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt)), HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt)), HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=200}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=200}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[ToyRelease (cnt), (HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=200}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[ToyRelease (cnt), (HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}};print(HeapReading{expression=VarExp{id='v1'}}))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=200}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[ToyRelease (cnt), print(HeapReading{expression=VarExp{id='v1'}}), HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=200}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[ToyRelease (cnt), print(HeapReading{expression=VarExp{id='v1'}}), HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=2}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=200}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[ToyRelease (cnt), print(HeapReading{expression=VarExp{id='v1'}})]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=400}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[ToyRelease (cnt), print(HeapReading{expression=VarExp{id='v1'}})]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=400}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[ToyRelease (cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} IntValue{val=400} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=400}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[ToyRelease (cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} IntValue{val=400} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=400}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} IntValue{val=400} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=400}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v1=(RefType{inner=int});(cnt=(int);(HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}};(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))))))]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(cnt=(int);(HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}};(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))))), v1=(RefType{inner=int})]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(cnt=(int);(HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}};(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))))), v1=(RefType{inner=int})]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(cnt=(int);(HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}};(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))))))]}
, symTable=MyDictionary{dictionary={v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(cnt=(int);(HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}};(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))))))]}
, symTable=MyDictionary{dictionary={v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}};(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))))), cnt=(int)]}
, symTable=MyDictionary{dictionary={v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}};(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))))), cnt=(int)]}
, symTable=MyDictionary{dictionary={v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}};(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}};(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))), HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))), HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))), NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))), NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))), ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))), ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))), ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))), ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)), HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)), HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[ToyRelease (cnt), print(HeapReading{expression=VarExp{id='v1'}})]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[ToyRelease (cnt), print(HeapReading{expression=VarExp{id='v1'}})]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[ToyRelease (cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[ToyRelease (cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[ToyRelease (cnt), print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[ToyRelease (cnt), print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[ToyRelease (cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[ToyRelease (cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt)))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt)))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt)), HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt)), HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=200}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=200}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[ToyRelease (cnt), (HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=200}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[ToyRelease (cnt), (HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=200}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[ToyRelease (cnt), print(HeapReading{expression=VarExp{id='v1'}}), HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=200}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[ToyRelease (cnt), print(HeapReading{expression=VarExp{id='v1'}}), HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=200}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[ToyRelease (cnt), print(HeapReading{expression=VarExp{id='v1'}})]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=200}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[ToyRelease (cnt), print(HeapReading{expression=VarExp{id='v1'}})]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=200}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[ToyRelease (cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} IntValue{val=200} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=200}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[ToyRelease (cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} IntValue{val=200} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=200}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} IntValue{val=200} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=200}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v1=(RefType{inner=int});(cnt=(int);(HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}};(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))))))]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(cnt=(int);(HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}};(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))))), v1=(RefType{inner=int})]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(cnt=(int);(HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}};(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))))), v1=(RefType{inner=int})]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(cnt=(int);(HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}};(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))))))]}
, symTable=MyDictionary{dictionary={v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(cnt=(int);(HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}};(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))))))]}
, symTable=MyDictionary{dictionary={v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}};(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))))), cnt=(int)]}
, symTable=MyDictionary{dictionary={v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}};(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))))), cnt=(int)]}
, symTable=MyDictionary{dictionary={v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}};(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}};(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))), HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))), HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))), NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))), NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))), ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))), ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))), ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))), ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)), HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)), HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[ToyRelease (cnt), print(HeapReading{expression=VarExp{id='v1'}})]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[ToyRelease (cnt), print(HeapReading{expression=VarExp{id='v1'}})]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[ToyRelease (cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[ToyRelease (cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[ToyRelease (cnt), print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[ToyRelease (cnt), print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[ToyRelease (cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[ToyRelease (cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt)))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt)))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt)), HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt)), HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=200}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=200}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[ToyRelease (cnt), (HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=200}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[ToyRelease (cnt), (HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=200}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[ToyRelease (cnt), print(HeapReading{expression=VarExp{id='v1'}}), HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=200}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[ToyRelease (cnt), print(HeapReading{expression=VarExp{id='v1'}}), HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=200}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[ToyRelease (cnt), print(HeapReading{expression=VarExp{id='v1'}})]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=200}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[ToyRelease (cnt), print(HeapReading{expression=VarExp{id='v1'}})]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=200}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[ToyRelease (cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} IntValue{val=200} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=200}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[ToyRelease (cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} IntValue{val=200} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=200}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} IntValue{val=200} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=200}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v1=(RefType{inner=int});(cnt=(int);(HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}};(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))))))]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(cnt=(int);(HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}};(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))))), v1=(RefType{inner=int})]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(cnt=(int);(HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}};(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))))), v1=(RefType{inner=int})]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(cnt=(int);(HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}};(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))))))]}
, symTable=MyDictionary{dictionary={v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(cnt=(int);(HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}};(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))))))]}
, symTable=MyDictionary{dictionary={v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}};(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))))), cnt=(int)]}
, symTable=MyDictionary{dictionary={v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}};(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))))), cnt=(int)]}
, symTable=MyDictionary{dictionary={v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}};(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}};(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))), HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))), HeapAllocation{varName='v1', exp=ValueExp{e=IntValue{val=2}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(0, int)}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))), NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))), NewSemaphore{variableName='cnt', exp1=HeapReading{expression=VarExp{id='v1'}}, exp2=ValueExp{e=IntValue{val=1}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=0}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))};(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))), ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))), ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))};(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))), ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))), ForkStatement{state=(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(ToyAcquire(cnt);(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(ToyAcquire(cnt);(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)), HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt)), HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=2}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}});ToyRelease (cnt))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[ToyRelease (cnt), print(HeapReading{expression=VarExp{id='v1'}})]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[ToyRelease (cnt), print(HeapReading{expression=VarExp{id='v1'}})]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[ToyRelease (cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[ToyRelease (cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=2
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt)), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[(print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}});ToyRelease (cnt))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[ToyRelease (cnt), print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[ToyRelease (cnt), print(HeapReading{expression=VarExp{id='v1'}}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[ToyRelease (cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[ToyRelease (cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))), ToyAcquire(cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt)))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}};((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt)))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt)), HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt)), HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=10}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=20}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=200}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[((HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}));ToyRelease (cnt))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=200}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[ToyRelease (cnt), (HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=200}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[ToyRelease (cnt), (HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}};print(HeapReading{expression=VarExp{id='v1'}}))]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=200}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[ToyRelease (cnt), print(HeapReading{expression=VarExp{id='v1'}}), HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=200}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[ToyRelease (cnt), print(HeapReading{expression=VarExp{id='v1'}}), HeapWriting{varName='v1', expression=HeapReading{expression=VarExp{id='v1'}}*ValueExp{e=IntValue{val=1}}}]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=200}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[ToyRelease (cnt), print(HeapReading{expression=VarExp{id='v1'}})]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=200}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[ToyRelease (cnt), print(HeapReading{expression=VarExp{id='v1'}})]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=200}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[ToyRelease (cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} IntValue{val=200} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=200}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[ToyRelease (cnt)]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} IntValue{val=200} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=200}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={cnt=IntValue{val=1}, v1=(1, int)}}
, out=IntValue{val=20} IntValue{val=19} IntValue{val=200} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=200}}, freeAddress=2}

}
