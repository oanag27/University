ProgramState{id=1
exeStack=MyStack{stack=[(v=(int);(v=ValueExp{e=IntValue{val=0}};(repeat((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})) until (VarExp{id='v'} == ValueExp{e=IntValue{val=3}});(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(repeat((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})) until (VarExp{id='v'} == ValueExp{e=IntValue{val=3}});(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))), v=(int)]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(repeat((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})) until (VarExp{id='v'} == ValueExp{e=IntValue{val=3}});(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))), v=(int)]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(repeat((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})) until (VarExp{id='v'} == ValueExp{e=IntValue{val=3}});(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(repeat((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})) until (VarExp{id='v'} == ValueExp{e=IntValue{val=3}});(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(repeat((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})) until (VarExp{id='v'} == ValueExp{e=IntValue{val=3}});(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))), v=ValueExp{e=IntValue{val=0}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(repeat((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})) until (VarExp{id='v'} == ValueExp{e=IntValue{val=3}});(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))), v=ValueExp{e=IntValue{val=0}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(repeat((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})) until (VarExp{id='v'} == ValueExp{e=IntValue{val=3}});(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(repeat((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})) until (VarExp{id='v'} == ValueExp{e=IntValue{val=3}});(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), repeat((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})) until (VarExp{id='v'} == ValueExp{e=IntValue{val=3}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), repeat((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})) until (VarExp{id='v'} == ValueExp{e=IntValue{val=3}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), ((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}});(WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), ((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}});(WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))), x=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=-1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))), x=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))), x=ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))), x=ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})), y=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})), y=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=3}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}), y=ValueExp{e=IntValue{val=3}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}), y=ValueExp{e=IntValue{val=3}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}, y=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}, y=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}, y=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=10} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
