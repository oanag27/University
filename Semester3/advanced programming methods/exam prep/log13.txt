ProgramState{id=1
exeStack=MyStack{stack=[(counter=(int);(a=(RefType{inner=int});((WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}));print(VarExp{id='counter'}))))]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(a=(RefType{inner=int});((WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}));print(VarExp{id='counter'}))), counter=(int)]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(a=(RefType{inner=int});((WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}));print(VarExp{id='counter'}))), counter=(int)]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(a=(RefType{inner=int});((WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}));print(VarExp{id='counter'})))]}
, symTable=MyDictionary{dictionary={counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(a=(RefType{inner=int});((WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}));print(VarExp{id='counter'})))]}
, symTable=MyDictionary{dictionary={counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[((WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}));print(VarExp{id='counter'})), a=(RefType{inner=int})]}
, symTable=MyDictionary{dictionary={counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[((WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}));print(VarExp{id='counter'})), a=(RefType{inner=int})]}
, symTable=MyDictionary{dictionary={counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[((WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}));print(VarExp{id='counter'}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[((WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}));print(VarExp{id='counter'}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=3
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=3
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=0}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(1, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=0}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=0}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(1, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=0}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=0}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(1, int), counter=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=0}}, freeAddress=2}

}
ProgramState{id=4
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=0}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=4
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=4
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=5
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=5
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=5
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=5
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={2=IntValue{val=1}}, freeAddress=3}

}
ProgramState{id=5
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(2, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={2=IntValue{val=1}}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={2=IntValue{val=1}}, freeAddress=3}

}
ProgramState{id=5
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(2, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={2=IntValue{val=1}}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={2=IntValue{val=1}}, freeAddress=3}

}
ProgramState{id=5
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(2, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={2=IntValue{val=1}}, freeAddress=3}

}
ProgramState{id=6
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={2=IntValue{val=1}}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=6
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=6
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=7
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=7
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=7
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=7
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={3=IntValue{val=2}}, freeAddress=4}

}
ProgramState{id=7
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(3, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={3=IntValue{val=2}}, freeAddress=4}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={3=IntValue{val=2}}, freeAddress=4}

}
ProgramState{id=7
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(3, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={3=IntValue{val=2}}, freeAddress=4}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={3=IntValue{val=2}}, freeAddress=4}

}
ProgramState{id=7
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(3, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={3=IntValue{val=2}}, freeAddress=4}

}
ProgramState{id=8
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={3=IntValue{val=2}}, freeAddress=4}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=8
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=8
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=9
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=9
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=9
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=9
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={4=IntValue{val=3}}, freeAddress=5}

}
ProgramState{id=9
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(4, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={4=IntValue{val=3}}, freeAddress=5}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={4=IntValue{val=3}}, freeAddress=5}

}
ProgramState{id=9
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(4, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={4=IntValue{val=3}}, freeAddress=5}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={4=IntValue{val=3}}, freeAddress=5}

}
ProgramState{id=9
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(4, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={4=IntValue{val=3}}, freeAddress=5}

}
ProgramState{id=10
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={4=IntValue{val=3}}, freeAddress=5}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=10
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=10
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=11
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=11
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=11
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=11
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={5=IntValue{val=4}}, freeAddress=6}

}
ProgramState{id=11
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(5, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={5=IntValue{val=4}}, freeAddress=6}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={5=IntValue{val=4}}, freeAddress=6}

}
ProgramState{id=11
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(5, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={5=IntValue{val=4}}, freeAddress=6}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={5=IntValue{val=4}}, freeAddress=6}

}
ProgramState{id=11
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(5, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={5=IntValue{val=4}}, freeAddress=6}

}
ProgramState{id=12
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={5=IntValue{val=4}}, freeAddress=6}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=12
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=12
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=13
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=13
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=13
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=13
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={6=IntValue{val=5}}, freeAddress=7}

}
ProgramState{id=13
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(6, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={6=IntValue{val=5}}, freeAddress=7}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={6=IntValue{val=5}}, freeAddress=7}

}
ProgramState{id=13
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(6, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={6=IntValue{val=5}}, freeAddress=7}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={6=IntValue{val=5}}, freeAddress=7}

}
ProgramState{id=13
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(6, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={6=IntValue{val=5}}, freeAddress=7}

}
ProgramState{id=14
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={6=IntValue{val=5}}, freeAddress=7}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=14
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=14
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=15
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=15
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=15
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=15
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={7=IntValue{val=6}}, freeAddress=8}

}
ProgramState{id=15
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(7, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={7=IntValue{val=6}}, freeAddress=8}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={7=IntValue{val=6}}, freeAddress=8}

}
ProgramState{id=15
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(7, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={7=IntValue{val=6}}, freeAddress=8}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={7=IntValue{val=6}}, freeAddress=8}

}
ProgramState{id=15
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(7, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={7=IntValue{val=6}}, freeAddress=8}

}
ProgramState{id=16
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={7=IntValue{val=6}}, freeAddress=8}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=16
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=16
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=17
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=17
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=17
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=17
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={8=IntValue{val=7}}, freeAddress=9}

}
ProgramState{id=17
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(8, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={8=IntValue{val=7}}, freeAddress=9}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={8=IntValue{val=7}}, freeAddress=9}

}
ProgramState{id=17
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(8, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={8=IntValue{val=7}}, freeAddress=9}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={8=IntValue{val=7}}, freeAddress=9}

}
ProgramState{id=17
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(8, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={8=IntValue{val=7}}, freeAddress=9}

}
ProgramState{id=18
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={8=IntValue{val=7}}, freeAddress=9}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=18
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=18
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=19
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=19
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=19
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=19
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={9=IntValue{val=8}}, freeAddress=10}

}
ProgramState{id=19
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(9, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={9=IntValue{val=8}}, freeAddress=10}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={9=IntValue{val=8}}, freeAddress=10}

}
ProgramState{id=19
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(9, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={9=IntValue{val=8}}, freeAddress=10}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={9=IntValue{val=8}}, freeAddress=10}

}
ProgramState{id=19
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(9, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={9=IntValue{val=8}}, freeAddress=10}

}
ProgramState{id=20
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={9=IntValue{val=8}}, freeAddress=10}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=20
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=10}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=20
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=21
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=10}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=21
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=10}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=21
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=10}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=21
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=1
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=10}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=10} 
, File Table[]
MyHeap{heapMap={10=IntValue{val=9}}, freeAddress=11}

}
ProgramState{id=21
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(10, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=10} 
, File Table[]
MyHeap{heapMap={10=IntValue{val=9}}, freeAddress=11}

}
ProgramState{id=21
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(10, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=10} 
, File Table[]
MyHeap{heapMap={10=IntValue{val=9}}, freeAddress=11}

}
ProgramState{id=21
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(10, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=10} IntValue{val=9} 
, File Table[]
MyHeap{heapMap={10=IntValue{val=9}}, freeAddress=11}

}
ProgramState{id=1
exeStack=MyStack{stack=[(counter=(int);(a=(RefType{inner=int});((WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}));print(VarExp{id='counter'}))))]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(a=(RefType{inner=int});((WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}));print(VarExp{id='counter'}))), counter=(int)]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(a=(RefType{inner=int});((WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}));print(VarExp{id='counter'}))), counter=(int)]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(a=(RefType{inner=int});((WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}));print(VarExp{id='counter'})))]}
, symTable=MyDictionary{dictionary={counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(a=(RefType{inner=int});((WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}));print(VarExp{id='counter'})))]}
, symTable=MyDictionary{dictionary={counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[((WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}));print(VarExp{id='counter'})), a=(RefType{inner=int})]}
, symTable=MyDictionary{dictionary={counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[((WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}));print(VarExp{id='counter'})), a=(RefType{inner=int})]}
, symTable=MyDictionary{dictionary={counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[((WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}));print(VarExp{id='counter'}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[((WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}));print(VarExp{id='counter'}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=3
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=3
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=0}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(1, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=0}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=0}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(1, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=0}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=0}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(1, int), counter=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=0}}, freeAddress=2}

}
ProgramState{id=4
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=0}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=4
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=4
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=5
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=5
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=5
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=5
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={2=IntValue{val=1}}, freeAddress=3}

}
ProgramState{id=5
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(2, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={2=IntValue{val=1}}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={2=IntValue{val=1}}, freeAddress=3}

}
ProgramState{id=5
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(2, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={2=IntValue{val=1}}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={2=IntValue{val=1}}, freeAddress=3}

}
ProgramState{id=5
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(2, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={2=IntValue{val=1}}, freeAddress=3}

}
ProgramState{id=6
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={2=IntValue{val=1}}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=6
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=6
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=7
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=7
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=7
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=7
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={3=IntValue{val=2}}, freeAddress=4}

}
ProgramState{id=7
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(3, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={3=IntValue{val=2}}, freeAddress=4}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={3=IntValue{val=2}}, freeAddress=4}

}
ProgramState{id=7
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(3, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={3=IntValue{val=2}}, freeAddress=4}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={3=IntValue{val=2}}, freeAddress=4}

}
ProgramState{id=7
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(3, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={3=IntValue{val=2}}, freeAddress=4}

}
ProgramState{id=8
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={3=IntValue{val=2}}, freeAddress=4}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=8
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=8
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=9
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=9
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=9
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=9
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={4=IntValue{val=3}}, freeAddress=5}

}
ProgramState{id=9
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(4, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={4=IntValue{val=3}}, freeAddress=5}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={4=IntValue{val=3}}, freeAddress=5}

}
ProgramState{id=9
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(4, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={4=IntValue{val=3}}, freeAddress=5}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={4=IntValue{val=3}}, freeAddress=5}

}
ProgramState{id=9
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(4, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={4=IntValue{val=3}}, freeAddress=5}

}
ProgramState{id=10
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={4=IntValue{val=3}}, freeAddress=5}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=10
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=10
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=11
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=11
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=11
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=11
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={5=IntValue{val=4}}, freeAddress=6}

}
ProgramState{id=11
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(5, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={5=IntValue{val=4}}, freeAddress=6}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={5=IntValue{val=4}}, freeAddress=6}

}
ProgramState{id=11
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(5, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={5=IntValue{val=4}}, freeAddress=6}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={5=IntValue{val=4}}, freeAddress=6}

}
ProgramState{id=11
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(5, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={5=IntValue{val=4}}, freeAddress=6}

}
ProgramState{id=12
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={5=IntValue{val=4}}, freeAddress=6}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=12
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=12
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=13
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=13
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=13
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=13
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={6=IntValue{val=5}}, freeAddress=7}

}
ProgramState{id=13
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(6, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={6=IntValue{val=5}}, freeAddress=7}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={6=IntValue{val=5}}, freeAddress=7}

}
ProgramState{id=13
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(6, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={6=IntValue{val=5}}, freeAddress=7}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={6=IntValue{val=5}}, freeAddress=7}

}
ProgramState{id=13
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(6, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={6=IntValue{val=5}}, freeAddress=7}

}
ProgramState{id=14
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={6=IntValue{val=5}}, freeAddress=7}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=14
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=14
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=15
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=15
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=15
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=15
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={7=IntValue{val=6}}, freeAddress=8}

}
ProgramState{id=15
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(7, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={7=IntValue{val=6}}, freeAddress=8}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={7=IntValue{val=6}}, freeAddress=8}

}
ProgramState{id=15
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(7, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={7=IntValue{val=6}}, freeAddress=8}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={7=IntValue{val=6}}, freeAddress=8}

}
ProgramState{id=15
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(7, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={7=IntValue{val=6}}, freeAddress=8}

}
ProgramState{id=16
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={7=IntValue{val=6}}, freeAddress=8}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=16
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=16
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=17
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=17
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=17
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=17
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={8=IntValue{val=7}}, freeAddress=9}

}
ProgramState{id=17
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(8, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={8=IntValue{val=7}}, freeAddress=9}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={8=IntValue{val=7}}, freeAddress=9}

}
ProgramState{id=17
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(8, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={8=IntValue{val=7}}, freeAddress=9}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={8=IntValue{val=7}}, freeAddress=9}

}
ProgramState{id=17
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(8, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={8=IntValue{val=7}}, freeAddress=9}

}
ProgramState{id=18
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={8=IntValue{val=7}}, freeAddress=9}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=18
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=18
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=19
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=19
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=19
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=19
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={9=IntValue{val=8}}, freeAddress=10}

}
ProgramState{id=19
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(9, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={9=IntValue{val=8}}, freeAddress=10}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={9=IntValue{val=8}}, freeAddress=10}

}
ProgramState{id=19
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(9, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={9=IntValue{val=8}}, freeAddress=10}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={9=IntValue{val=8}}, freeAddress=10}

}
ProgramState{id=19
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(9, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={9=IntValue{val=8}}, freeAddress=10}

}
ProgramState{id=20
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={9=IntValue{val=8}}, freeAddress=10}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=20
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=10}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=20
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=21
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=10}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=21
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=10}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=21
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=10}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=21
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=1
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=10}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=10} 
, File Table[]
MyHeap{heapMap={10=IntValue{val=9}}, freeAddress=11}

}
ProgramState{id=21
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(10, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=10} 
, File Table[]
MyHeap{heapMap={10=IntValue{val=9}}, freeAddress=11}

}
ProgramState{id=21
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(10, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=10} 
, File Table[]
MyHeap{heapMap={10=IntValue{val=9}}, freeAddress=11}

}
ProgramState{id=21
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(10, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=10} IntValue{val=9} 
, File Table[]
MyHeap{heapMap={10=IntValue{val=9}}, freeAddress=11}

}
ProgramState{id=1
exeStack=MyStack{stack=[(counter=(int);(a=(RefType{inner=int});((WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}));print(VarExp{id='counter'}))))]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(a=(RefType{inner=int});((WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}));print(VarExp{id='counter'}))), counter=(int)]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(a=(RefType{inner=int});((WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}));print(VarExp{id='counter'}))), counter=(int)]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(a=(RefType{inner=int});((WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}));print(VarExp{id='counter'})))]}
, symTable=MyDictionary{dictionary={counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(a=(RefType{inner=int});((WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}));print(VarExp{id='counter'})))]}
, symTable=MyDictionary{dictionary={counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[((WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}));print(VarExp{id='counter'})), a=(RefType{inner=int})]}
, symTable=MyDictionary{dictionary={counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[((WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}));print(VarExp{id='counter'})), a=(RefType{inner=int})]}
, symTable=MyDictionary{dictionary={counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[((WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}));print(VarExp{id='counter'}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[((WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}));print(VarExp{id='counter'}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=3
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=3
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=3
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=0}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(1, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=0}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=0}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(1, int), counter=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={1=IntValue{val=0}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=0}}, freeAddress=2}

}
ProgramState{id=3
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(1, int), counter=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=0}}, freeAddress=2}

}
ProgramState{id=4
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={1=IntValue{val=0}}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=4
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=4
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=5
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=5
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=5
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=5
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=2}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={2=IntValue{val=1}}, freeAddress=3}

}
ProgramState{id=5
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(2, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={2=IntValue{val=1}}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={2=IntValue{val=1}}, freeAddress=3}

}
ProgramState{id=5
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(2, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={2=IntValue{val=1}}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={2=IntValue{val=1}}, freeAddress=3}

}
ProgramState{id=5
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(2, int), counter=IntValue{val=1}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={2=IntValue{val=1}}, freeAddress=3}

}
ProgramState{id=6
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={2=IntValue{val=1}}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=6
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=6
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=7
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=7
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=7
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=7
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=3}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={3=IntValue{val=2}}, freeAddress=4}

}
ProgramState{id=7
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(3, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={3=IntValue{val=2}}, freeAddress=4}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={3=IntValue{val=2}}, freeAddress=4}

}
ProgramState{id=7
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(3, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={3=IntValue{val=2}}, freeAddress=4}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={3=IntValue{val=2}}, freeAddress=4}

}
ProgramState{id=7
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(3, int), counter=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={3=IntValue{val=2}}, freeAddress=4}

}
ProgramState{id=8
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={3=IntValue{val=2}}, freeAddress=4}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=8
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=8
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=9
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=9
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=9
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=9
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=4}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={4=IntValue{val=3}}, freeAddress=5}

}
ProgramState{id=9
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(4, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={4=IntValue{val=3}}, freeAddress=5}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={4=IntValue{val=3}}, freeAddress=5}

}
ProgramState{id=9
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(4, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={4=IntValue{val=3}}, freeAddress=5}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={4=IntValue{val=3}}, freeAddress=5}

}
ProgramState{id=9
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(4, int), counter=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={4=IntValue{val=3}}, freeAddress=5}

}
ProgramState{id=10
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={4=IntValue{val=3}}, freeAddress=5}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=10
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=10
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=11
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=11
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=11
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=11
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=5}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={5=IntValue{val=4}}, freeAddress=6}

}
ProgramState{id=11
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(5, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={5=IntValue{val=4}}, freeAddress=6}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={5=IntValue{val=4}}, freeAddress=6}

}
ProgramState{id=11
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(5, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={5=IntValue{val=4}}, freeAddress=6}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={5=IntValue{val=4}}, freeAddress=6}

}
ProgramState{id=11
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(5, int), counter=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={5=IntValue{val=4}}, freeAddress=6}

}
ProgramState{id=12
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={5=IntValue{val=4}}, freeAddress=6}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=12
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=12
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=13
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=13
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=13
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=13
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=6}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={6=IntValue{val=5}}, freeAddress=7}

}
ProgramState{id=13
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(6, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={6=IntValue{val=5}}, freeAddress=7}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={6=IntValue{val=5}}, freeAddress=7}

}
ProgramState{id=13
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(6, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={6=IntValue{val=5}}, freeAddress=7}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={6=IntValue{val=5}}, freeAddress=7}

}
ProgramState{id=13
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(6, int), counter=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={6=IntValue{val=5}}, freeAddress=7}

}
ProgramState{id=14
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={6=IntValue{val=5}}, freeAddress=7}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=14
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=14
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=15
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=15
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=15
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=15
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=7}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={7=IntValue{val=6}}, freeAddress=8}

}
ProgramState{id=15
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(7, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={7=IntValue{val=6}}, freeAddress=8}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={7=IntValue{val=6}}, freeAddress=8}

}
ProgramState{id=15
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(7, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={7=IntValue{val=6}}, freeAddress=8}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={7=IntValue{val=6}}, freeAddress=8}

}
ProgramState{id=15
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(7, int), counter=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={7=IntValue{val=6}}, freeAddress=8}

}
ProgramState{id=16
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={7=IntValue{val=6}}, freeAddress=8}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=16
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=16
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=17
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=17
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=17
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=17
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=8}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={8=IntValue{val=7}}, freeAddress=9}

}
ProgramState{id=17
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(8, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={8=IntValue{val=7}}, freeAddress=9}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={8=IntValue{val=7}}, freeAddress=9}

}
ProgramState{id=17
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(8, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={8=IntValue{val=7}}, freeAddress=9}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={8=IntValue{val=7}}, freeAddress=9}

}
ProgramState{id=17
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(8, int), counter=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={8=IntValue{val=7}}, freeAddress=9}

}
ProgramState{id=18
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={8=IntValue{val=7}}, freeAddress=9}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=18
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=18
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=19
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=19
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=19
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=19
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=9}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={9=IntValue{val=8}}, freeAddress=10}

}
ProgramState{id=19
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(9, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={9=IntValue{val=8}}, freeAddress=10}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={9=IntValue{val=8}}, freeAddress=10}

}
ProgramState{id=19
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(9, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={9=IntValue{val=8}}, freeAddress=10}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={9=IntValue{val=8}}, freeAddress=10}

}
ProgramState{id=19
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(9, int), counter=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={9=IntValue{val=8}}, freeAddress=10}

}
ProgramState{id=20
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={9=IntValue{val=8}}, freeAddress=10}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}})), counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=20
exeStack=MyStack{stack=[ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=10}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=20
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=21
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'}), (WHILE(VarExp{id='counter'} < ValueExp{e=IntValue{val=10}}) (ForkStatement{state=ForkStatement{state=(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))}};counter=VarExp{id='counter'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=10}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=21
exeStack=MyStack{stack=[(HeapAllocation{varName='a', exp=VarExp{id='counter'}};print(HeapReading{expression=VarExp{id='a'}}))]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=10}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=21
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='counter'})]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=10}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=21
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}}), HeapAllocation{varName='a', exp=VarExp{id='counter'}}]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=10}

}
ProgramState{id=1
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(0, int), counter=IntValue{val=10}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=10} 
, File Table[]
MyHeap{heapMap={10=IntValue{val=9}}, freeAddress=11}

}
ProgramState{id=21
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(10, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=10} 
, File Table[]
MyHeap{heapMap={10=IntValue{val=9}}, freeAddress=11}

}
ProgramState{id=21
exeStack=MyStack{stack=[print(HeapReading{expression=VarExp{id='a'}})]}
, symTable=MyDictionary{dictionary={a=(10, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=10} 
, File Table[]
MyHeap{heapMap={10=IntValue{val=9}}, freeAddress=11}

}
ProgramState{id=21
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={a=(10, int), counter=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=10} IntValue{val=9} 
, File Table[]
MyHeap{heapMap={10=IntValue{val=9}}, freeAddress=11}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=(int);(v=ValueExp{e=IntValue{val=0}};(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))))]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))), v=(int)]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))), v=(int)]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))), v=ValueExp{e=IntValue{val=0}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))), v=ValueExp{e=IntValue{val=0}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), ((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}});(WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), ((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}});(WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))), x=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=-1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))), x=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))), y=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))), y=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))), z=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))), z=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), w=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), w=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))), x=ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))), x=ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))), y=ValueExp{e=IntValue{val=2}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))), y=ValueExp{e=IntValue{val=2}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})), z=ValueExp{e=IntValue{val=3}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})), z=ValueExp{e=IntValue{val=3}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}), w=ValueExp{e=IntValue{val=4}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}), w=ValueExp{e=IntValue{val=4}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=4}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=4}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=4}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=10} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=(int);(v=ValueExp{e=IntValue{val=0}};(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(null))))))))]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(null))))))), v=(int)]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(null))))))), v=(int)]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(null)))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(null)))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(null)))))), v=ValueExp{e=IntValue{val=0}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(null)))))), v=ValueExp{e=IntValue{val=0}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(null))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(null))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(null))))), RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(null))))), RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(null))))), ((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}});(WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(null))))), ((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}});(WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(null))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(null))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(null))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(null))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(null))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(null))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(null))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(null))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(null)))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(null)))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(null)))), x=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=-1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(null)))), x=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(null))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=(int);(y=ValueExp{e=IntValue{val=3}};print(null))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(y=ValueExp{e=IntValue{val=3}};print(null))), x=ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(y=ValueExp{e=IntValue{val=3}};print(null))), x=ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(y=ValueExp{e=IntValue{val=3}};print(null)))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(y=ValueExp{e=IntValue{val=3}};print(null)))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=3}};print(null)), y=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=3}};print(null)), y=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=3}};print(null))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=3}};print(null))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(null), y=ValueExp{e=IntValue{val=3}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(null), y=ValueExp{e=IntValue{val=3}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(null)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}, y=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(null)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}, y=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}, y=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=(int);(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(null)))))))))))]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(null)))))))))), v=(int)]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(null)))))))))), v=(int)]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(null))))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(null))))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(null))))))))), RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(null))))))))), RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(null))))))))), ((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}});(WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(null))))))))), ((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}});(WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(null))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(null))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(null))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(null))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(null))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(null))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(null))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(null))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(null)))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(null)))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(null)))))))), x=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=-1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(null)))))))), x=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(null))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(null))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(null))))))), y=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(null))))))), y=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(null)))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(null)))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(null)))))), z=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(null)))))), z=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(null))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(null))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(null))))), w=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(null))))), w=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(null)))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(null)))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(null)))), x=ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(null)))), x=ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(null))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(null))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(null))), y=ValueExp{e=IntValue{val=2}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(null))), y=ValueExp{e=IntValue{val=2}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(null)))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(null)))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(null)), z=ValueExp{e=IntValue{val=3}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(null)), z=ValueExp{e=IntValue{val=3}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(null))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(null))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(null), w=ValueExp{e=IntValue{val=4}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(null), w=ValueExp{e=IntValue{val=4}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(null)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=4}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(null)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=4}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=4}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=(int);(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))))]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))), v=(int)]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))), v=(int)]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), ((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}});(WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), ((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}});(WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))), x=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=-1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))), x=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))), y=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))), y=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))), z=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))), z=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), w=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), w=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))), x=ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))), x=ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))), y=ValueExp{e=IntValue{val=2}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))), y=ValueExp{e=IntValue{val=2}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})), z=ValueExp{e=IntValue{val=3}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})), z=ValueExp{e=IntValue{val=3}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}), w=ValueExp{e=IntValue{val=4}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}), w=ValueExp{e=IntValue{val=4}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=4}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=4}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=4}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=10} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=(int);(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))))]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))), v=(int)]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))), v=(int)]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), ((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}});(WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), ((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}});(WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=-1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=3
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=3
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=2}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=3
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=2}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=3
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=3
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=3
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=3
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=4
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=4
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=4
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=4
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=4
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=4
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=4
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=5
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=5
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=5
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=5
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=5
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=5
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=5
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=2}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=6
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=6
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=6
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=6
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=6
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=6
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=6
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=7
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=7
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=7
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=7
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=7
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=7
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=7
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=4}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=8
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=8
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=8
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=8
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=8
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=8
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=8
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=5}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=9
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=9
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=9
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=9
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=9
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=9
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=9
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=6}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=10
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=10
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=10
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=10
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=10
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=10
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=10
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=7}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=11
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=11
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=10}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=11
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=10}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=11
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=10}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=11
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=10}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=11
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=10}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=11
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=8}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=10}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=10}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=12
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=10}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=10}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=12
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=10}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=11}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=12
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=10}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=11}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=12
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=10}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=11}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=12
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=10}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=11}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=12
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=10}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=11}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=12
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=9}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=11}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=11}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=13
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=11}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=11}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=13
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=11}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=12}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=13
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=11}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=12}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=13
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=11}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=12}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=13
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=11}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=12}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=13
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=11}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=12}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=13
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=10}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=12}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=12}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=14
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=12}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=12}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=14
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=12}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=13}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=14
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=12}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=13}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=14
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=12}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=13}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=14
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=12}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=13}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=14
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=12}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=13}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=14
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=11}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=13}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=13}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=15
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=13}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=13}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=15
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=13}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=14}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=15
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=13}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=14}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=15
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=13}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=14}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=15
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=13}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=14}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=15
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=13}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=14}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=15
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=12}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=14}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=14}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=16
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=14}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=14}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=16
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=14}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=15}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=16
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=14}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=15}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=16
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=14}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=15}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=16
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=14}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=15}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=16
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=14}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=15}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=16
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=13}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=15}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=15}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=17
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=15}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=15}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=17
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=15}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=16}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=17
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=15}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=16}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=17
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=15}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=16}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=17
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=15}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=16}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=17
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=15}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=16}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=17
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=14}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=16}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=16}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=18
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=16}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=16}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=18
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=16}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=17}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=18
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=16}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=17}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=18
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=16}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=17}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=18
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=16}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=17}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=18
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=16}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=17}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=18
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=15}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=17}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=17}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=19
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=17}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=17}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=19
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=17}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=18}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=19
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=17}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=18}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=19
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=17}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=18}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=19
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=17}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=18}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=19
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=17}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=18}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=19
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=16}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=18}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=18}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=20
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=18}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=18}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=20
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=18}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=19}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=20
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=18}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=19}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=20
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=18}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=19}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=20
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=18}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=19}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=20
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=18}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=19}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=20
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=17}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=19}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=19}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=21
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=19}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=19}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=21
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=19}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=20}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=21
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=19}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=20}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=21
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=19}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=20}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=21
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=19}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=20}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=21
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=19}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=20}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=21
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=18}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=20}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=20}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=22
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=20}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=20}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=22
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=20}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=21}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=22
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=20}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=21}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=22
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=20}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=21}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=22
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=20}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=21}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=22
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=20}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=21}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=22
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=19}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=21}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=21}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=23
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=21}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=21}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=23
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=21}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=22}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=23
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=21}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=22}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=23
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=21}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=22}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=23
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=21}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=22}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=23
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=21}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=22}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=23
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=20}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=22}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=22}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=24
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=22}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=22}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=24
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=22}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=23}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=24
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=22}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=23}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=24
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=22}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=23}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=24
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=22}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=23}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=24
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=22}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=23}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=24
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=21}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=23}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=23}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=25
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=23}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=23}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=25
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=23}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=24}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=25
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=23}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=24}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=25
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=23}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=24}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=25
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=23}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=24}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=25
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=23}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=24}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=25
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=22}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=24}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=24}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=26
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=24}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=24}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=26
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=24}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=25}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=26
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=24}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=25}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=26
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=24}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=25}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=26
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=24}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=25}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=26
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=24}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=25}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=26
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=23}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=25}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=25}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=27
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=25}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=25}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=27
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=25}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=26}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=27
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=25}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=26}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=27
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=25}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=26}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=27
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=25}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=26}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=27
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=25}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=26}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=27
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=24}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=26}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=26}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=28
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=26}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=26}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=28
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=26}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=27}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=28
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=26}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=27}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=28
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=26}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=27}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} IntValue{val=26} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=28
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=26}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} IntValue{val=26} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=27}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} IntValue{val=26} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=28
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=26}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} IntValue{val=26} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=27}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} IntValue{val=26} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=28
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=25}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} IntValue{val=26} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=27}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} IntValue{val=26} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=27}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} IntValue{val=26} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=29
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=27}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} IntValue{val=26} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=27}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} IntValue{val=26} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=29
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=27}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} IntValue{val=26} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=28}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} IntValue{val=26} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=29
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=27}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} IntValue{val=26} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=28}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} IntValue{val=26} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=29
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=27}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} IntValue{val=26} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=28}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} IntValue{val=26} IntValue{val=27} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=29
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=27}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} IntValue{val=26} IntValue{val=27} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=28}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} IntValue{val=26} IntValue{val=27} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=29
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=27}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} IntValue{val=26} IntValue{val=27} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=28}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} IntValue{val=26} IntValue{val=27} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=29
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=26}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} IntValue{val=26} IntValue{val=27} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=28}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} IntValue{val=26} IntValue{val=27} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=28}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} IntValue{val=26} IntValue{val=27} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=30
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=28}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} IntValue{val=26} IntValue{val=27} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=28}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} IntValue{val=26} IntValue{val=27} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=30
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=28}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} IntValue{val=26} IntValue{val=27} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=29}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} IntValue{val=26} IntValue{val=27} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=30
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=28}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} IntValue{val=26} IntValue{val=27} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=29}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} IntValue{val=26} IntValue{val=27} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=30
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=28}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} IntValue{val=26} IntValue{val=27} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=29}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} IntValue{val=26} IntValue{val=27} IntValue{val=28} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=30
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=28}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} IntValue{val=26} IntValue{val=27} IntValue{val=28} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=29}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} IntValue{val=26} IntValue{val=27} IntValue{val=28} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=30
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=28}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} IntValue{val=26} IntValue{val=27} IntValue{val=28} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=29}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} IntValue{val=26} IntValue{val=27} IntValue{val=28} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=30
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=27}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} IntValue{val=26} IntValue{val=27} IntValue{val=28} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=29}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} IntValue{val=26} IntValue{val=27} IntValue{val=28} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=29}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} IntValue{val=26} IntValue{val=27} IntValue{val=28} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=31
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=29}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} IntValue{val=26} IntValue{val=27} IntValue{val=28} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=29}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} IntValue{val=26} IntValue{val=27} IntValue{val=28} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=31
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=29}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} IntValue{val=26} IntValue{val=27} IntValue{val=28} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=30}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} IntValue{val=26} IntValue{val=27} IntValue{val=28} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=31
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=29}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} IntValue{val=26} IntValue{val=27} IntValue{val=28} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=30}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} IntValue{val=26} IntValue{val=27} IntValue{val=28} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=31
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=29}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} IntValue{val=26} IntValue{val=27} IntValue{val=28} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=30}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} IntValue{val=26} IntValue{val=27} IntValue{val=28} IntValue{val=29} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=31
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=29}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} IntValue{val=26} IntValue{val=27} IntValue{val=28} IntValue{val=29} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=30}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} IntValue{val=26} IntValue{val=27} IntValue{val=28} IntValue{val=29} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=31
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=29}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} IntValue{val=26} IntValue{val=27} IntValue{val=28} IntValue{val=29} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=30}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} IntValue{val=26} IntValue{val=27} IntValue{val=28} IntValue{val=29} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=31
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=28}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} IntValue{val=26} IntValue{val=27} IntValue{val=28} IntValue{val=29} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=30}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} IntValue{val=26} IntValue{val=27} IntValue{val=28} IntValue{val=29} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=30}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} IntValue{val=26} IntValue{val=27} IntValue{val=28} IntValue{val=29} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=32
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=30}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} IntValue{val=26} IntValue{val=27} IntValue{val=28} IntValue{val=29} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=30}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} IntValue{val=26} IntValue{val=27} IntValue{val=28} IntValue{val=29} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=32
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=30}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} IntValue{val=26} IntValue{val=27} IntValue{val=28} IntValue{val=29} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=31}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} IntValue{val=26} IntValue{val=27} IntValue{val=28} IntValue{val=29} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=32
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=30}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} IntValue{val=26} IntValue{val=27} IntValue{val=28} IntValue{val=29} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=31}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} IntValue{val=26} IntValue{val=27} IntValue{val=28} IntValue{val=29} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=32
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=30}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} IntValue{val=26} IntValue{val=27} IntValue{val=28} IntValue{val=29} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=31}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} IntValue{val=26} IntValue{val=27} IntValue{val=28} IntValue{val=29} IntValue{val=30} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=32
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=30}}}
, out=IntValue{val=0} IntValue{val=1} IntValue{val=2} IntValue{val=3} IntValue{val=4} IntValue{val=5} IntValue{val=6} IntValue{val=7} IntValue{val=8} IntValue{val=9} IntValue{val=10} IntValue{val=11} IntValue{val=12} IntValue{val=13} IntValue{val=14} IntValue{val=15} IntValue{val=16} IntValue{val=17} IntValue{val=18} IntValue{val=19} IntValue{val=20} IntValue{val=21} IntValue{val=22} IntValue{val=23} IntValue{val=24} IntValue{val=25} IntValue{val=26} IntValue{val=27} IntValue{val=28} IntValue{val=29} IntValue{val=30} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=(int);(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} < ValueExp{e=IntValue{val=3}}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))))]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} < ValueExp{e=IntValue{val=3}}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))), v=(int)]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} < ValueExp{e=IntValue{val=3}}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))), v=(int)]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} < ValueExp{e=IntValue{val=3}}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} < ValueExp{e=IntValue{val=3}}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} < ValueExp{e=IntValue{val=3}}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} < ValueExp{e=IntValue{val=3}}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), ((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}});(WHILE(NotExp{exp=VarExp{id='v'} < ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), ((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}});(WHILE(NotExp{exp=VarExp{id='v'} < ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} < ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} < ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} < ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} < ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} < ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} < ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} < ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} < ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))), x=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=-1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))), x=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))), y=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))), y=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))), z=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))), z=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), w=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), w=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))), x=ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))), x=ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))), y=ValueExp{e=IntValue{val=2}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))), y=ValueExp{e=IntValue{val=2}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})), z=ValueExp{e=IntValue{val=3}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})), z=ValueExp{e=IntValue{val=3}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}), w=ValueExp{e=IntValue{val=4}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}), w=ValueExp{e=IntValue{val=4}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=4}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=4}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=4}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=10} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=(int);(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} < ValueExp{e=IntValue{val=3}}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))))]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} < ValueExp{e=IntValue{val=3}}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))), v=(int)]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} < ValueExp{e=IntValue{val=3}}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))), v=(int)]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} < ValueExp{e=IntValue{val=3}}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} < ValueExp{e=IntValue{val=3}}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} < ValueExp{e=IntValue{val=3}}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} < ValueExp{e=IntValue{val=3}}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), ((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}});(WHILE(NotExp{exp=VarExp{id='v'} < ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), ((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}});(WHILE(NotExp{exp=VarExp{id='v'} < ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} < ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} < ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} < ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} < ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} < ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} < ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} < ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} < ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))), x=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=-1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))), x=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))), y=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))), y=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))), z=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))), z=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), w=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), w=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))), x=ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))), x=ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))), y=ValueExp{e=IntValue{val=2}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))), y=ValueExp{e=IntValue{val=2}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})), z=ValueExp{e=IntValue{val=3}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})), z=ValueExp{e=IntValue{val=3}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}), w=ValueExp{e=IntValue{val=4}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}), w=ValueExp{e=IntValue{val=4}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=4}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=4}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=4}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=10} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=(int);(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))))]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))), v=(int)]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))), v=(int)]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), RepeatStmt{stmt=(ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}), exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), ((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}});(WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), ((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}});(WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))), x=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=-1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))), x=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))), y=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))), y=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))), z=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))), z=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), w=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), w=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))), x=ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))), x=ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))), y=ValueExp{e=IntValue{val=2}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))), y=ValueExp{e=IntValue{val=2}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})), z=ValueExp{e=IntValue{val=3}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})), z=ValueExp{e=IntValue{val=3}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}), w=ValueExp{e=IntValue{val=4}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}), w=ValueExp{e=IntValue{val=4}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=4}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=4}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=4}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=10} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=(int);(repeat((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})) until (VarExp{id='v'} == ValueExp{e=IntValue{val=3}});(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))))]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(repeat((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})) until (VarExp{id='v'} == ValueExp{e=IntValue{val=3}});(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))), v=(int)]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(repeat((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})) until (VarExp{id='v'} == ValueExp{e=IntValue{val=3}});(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))), v=(int)]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(repeat((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})) until (VarExp{id='v'} == ValueExp{e=IntValue{val=3}});(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(repeat((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})) until (VarExp{id='v'} == ValueExp{e=IntValue{val=3}});(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), repeat((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})) until (VarExp{id='v'} == ValueExp{e=IntValue{val=3}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), repeat((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})) until (VarExp{id='v'} == ValueExp{e=IntValue{val=3}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), ((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}});(WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), ((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}});(WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))), x=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=-1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))), x=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))), y=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))), y=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))), z=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))), z=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), w=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), w=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))), x=ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))), x=ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))), y=ValueExp{e=IntValue{val=2}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))), y=ValueExp{e=IntValue{val=2}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})), z=ValueExp{e=IntValue{val=3}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})), z=ValueExp{e=IntValue{val=3}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}), w=ValueExp{e=IntValue{val=4}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}), w=ValueExp{e=IntValue{val=4}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=4}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=4}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=4}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=10} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=(int);(v=ValueExp{e=IntValue{val=0}};(repeat((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})) until (VarExp{id='v'} == ValueExp{e=IntValue{val=3}});(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))))]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(repeat((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})) until (VarExp{id='v'} == ValueExp{e=IntValue{val=3}});(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))), v=(int)]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(repeat((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})) until (VarExp{id='v'} == ValueExp{e=IntValue{val=3}});(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))), v=(int)]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(repeat((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})) until (VarExp{id='v'} == ValueExp{e=IntValue{val=3}});(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(repeat((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})) until (VarExp{id='v'} == ValueExp{e=IntValue{val=3}});(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(repeat((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})) until (VarExp{id='v'} == ValueExp{e=IntValue{val=3}});(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))), v=ValueExp{e=IntValue{val=0}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(repeat((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})) until (VarExp{id='v'} == ValueExp{e=IntValue{val=3}});(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))), v=ValueExp{e=IntValue{val=0}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(repeat((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})) until (VarExp{id='v'} == ValueExp{e=IntValue{val=3}});(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(repeat((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})) until (VarExp{id='v'} == ValueExp{e=IntValue{val=3}});(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), repeat((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})) until (VarExp{id='v'} == ValueExp{e=IntValue{val=3}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), repeat((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})) until (VarExp{id='v'} == ValueExp{e=IntValue{val=3}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), ((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}});(WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), ((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}});(WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))), x=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=-1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))), x=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))), y=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))), y=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))), z=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))), z=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), w=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), w=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))), x=ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))), x=ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))), y=ValueExp{e=IntValue{val=2}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))), y=ValueExp{e=IntValue{val=2}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})), z=ValueExp{e=IntValue{val=3}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})), z=ValueExp{e=IntValue{val=3}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}), w=ValueExp{e=IntValue{val=4}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}), w=ValueExp{e=IntValue{val=4}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=4}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=4}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=4}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=10} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=(int);(v=ValueExp{e=IntValue{val=0}};(repeat((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})) until (VarExp{id='v'} == ValueExp{e=IntValue{val=3}});(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))))]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(repeat((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})) until (VarExp{id='v'} == ValueExp{e=IntValue{val=3}});(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))), v=(int)]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(repeat((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})) until (VarExp{id='v'} == ValueExp{e=IntValue{val=3}});(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))), v=(int)]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(repeat((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})) until (VarExp{id='v'} == ValueExp{e=IntValue{val=3}});(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(repeat((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})) until (VarExp{id='v'} == ValueExp{e=IntValue{val=3}});(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(repeat((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})) until (VarExp{id='v'} == ValueExp{e=IntValue{val=3}});(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))), v=ValueExp{e=IntValue{val=0}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(repeat((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})) until (VarExp{id='v'} == ValueExp{e=IntValue{val=3}});(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))), v=ValueExp{e=IntValue{val=0}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(repeat((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})) until (VarExp{id='v'} == ValueExp{e=IntValue{val=3}});(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(repeat((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})) until (VarExp{id='v'} == ValueExp{e=IntValue{val=3}});(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), repeat((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})) until (VarExp{id='v'} == ValueExp{e=IntValue{val=3}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), repeat((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})) until (VarExp{id='v'} == ValueExp{e=IntValue{val=3}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), ((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}});(WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), ((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}});(WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))), x=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=-1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))), x=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))), y=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))), y=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))), z=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))), z=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), w=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), w=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))), x=ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))), x=ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))), y=ValueExp{e=IntValue{val=2}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))), y=ValueExp{e=IntValue{val=2}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})), z=ValueExp{e=IntValue{val=3}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})), z=ValueExp{e=IntValue{val=3}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}), w=ValueExp{e=IntValue{val=4}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}), w=ValueExp{e=IntValue{val=4}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=4}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=4}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=4}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=10} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=(int);(v=ValueExp{e=IntValue{val=0}};(repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))))]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))), v=(int)]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))), v=(int)]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))), v=ValueExp{e=IntValue{val=0}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))), v=ValueExp{e=IntValue{val=0}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), ((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}});(WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), ((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}});(WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))), x=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=-1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))), x=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))), y=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))), y=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))), z=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))), z=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), w=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), w=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))), x=ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))), x=ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))), y=ValueExp{e=IntValue{val=2}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))), y=ValueExp{e=IntValue{val=2}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})), z=ValueExp{e=IntValue{val=3}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})), z=ValueExp{e=IntValue{val=3}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}), w=ValueExp{e=IntValue{val=4}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}), w=ValueExp{e=IntValue{val=4}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=4}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=4}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=4}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=10} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=(int);(v=ValueExp{e=IntValue{val=0}};(repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))))]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))), v=(int)]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))), v=(int)]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))), v=ValueExp{e=IntValue{val=0}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))), v=ValueExp{e=IntValue{val=0}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), ((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}});(WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), ((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}});(WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))), x=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=-1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))), x=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))), y=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))), y=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))), z=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))), z=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), w=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), w=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))), x=ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))), x=ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))), y=ValueExp{e=IntValue{val=2}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))), y=ValueExp{e=IntValue{val=2}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})), z=ValueExp{e=IntValue{val=3}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})), z=ValueExp{e=IntValue{val=3}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}), w=ValueExp{e=IntValue{val=4}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}), w=ValueExp{e=IntValue{val=4}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=4}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=4}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=4}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=10} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=(int);(v=ValueExp{e=IntValue{val=0}};(repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))))]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))), v=(int)]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))), v=(int)]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))), v=ValueExp{e=IntValue{val=0}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))), v=ValueExp{e=IntValue{val=0}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), ((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}});(WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), ((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}});(WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))), x=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=-1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))), x=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))), y=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))), y=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))), z=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))), z=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), w=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), w=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))), x=ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))), x=ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))), y=ValueExp{e=IntValue{val=2}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))), y=ValueExp{e=IntValue{val=2}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})), z=ValueExp{e=IntValue{val=3}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})), z=ValueExp{e=IntValue{val=3}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}), w=ValueExp{e=IntValue{val=4}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}), w=ValueExp{e=IntValue{val=4}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=4}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=4}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=4}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=10} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=(int);(v=ValueExp{e=IntValue{val=0}};(repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))))]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))), v=(int)]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))), v=(int)]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))), v=ValueExp{e=IntValue{val=0}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))), v=ValueExp{e=IntValue{val=0}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}};(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), ((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}});(WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), ((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}});(WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))), x=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=-1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))), x=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))), y=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))), y=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=(int);(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))), z=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))), z=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=(int);(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), w=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), w=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))), x=ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))), x=ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=2}};(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))), y=ValueExp{e=IntValue{val=2}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))), y=ValueExp{e=IntValue{val=2}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=0}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(z=ValueExp{e=IntValue{val=3}};(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})), z=ValueExp{e=IntValue{val=3}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})), z=ValueExp{e=IntValue{val=3}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(w=ValueExp{e=IntValue{val=4}};print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}), w=ValueExp{e=IntValue{val=4}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}), w=ValueExp{e=IntValue{val=4}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=0}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=4}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=4}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, w=IntValue{val=4}, x=IntValue{val=1}, y=IntValue{val=2}, z=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=10} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=(int);(x=(int);(y=(int);(v=ValueExp{e=IntValue{val=0}};(repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}};(x=ValueExp{e=IntValue{val=1}};(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))))]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(v=ValueExp{e=IntValue{val=0}};(repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}};(x=ValueExp{e=IntValue{val=1}};(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), v=(int)]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(v=ValueExp{e=IntValue{val=0}};(repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}};(x=ValueExp{e=IntValue{val=1}};(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))), v=(int)]}
, symTable=MyDictionary{dictionary={}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(v=ValueExp{e=IntValue{val=0}};(repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}};(x=ValueExp{e=IntValue{val=1}};(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=(int);(y=(int);(v=ValueExp{e=IntValue{val=0}};(repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}};(x=ValueExp{e=IntValue{val=1}};(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(v=ValueExp{e=IntValue{val=0}};(repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}};(x=ValueExp{e=IntValue{val=1}};(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))), x=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(v=ValueExp{e=IntValue{val=0}};(repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}};(x=ValueExp{e=IntValue{val=1}};(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))), x=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(v=ValueExp{e=IntValue{val=0}};(repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}};(x=ValueExp{e=IntValue{val=1}};(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}, x=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=(int);(v=ValueExp{e=IntValue{val=0}};(repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}};(x=ValueExp{e=IntValue{val=1}};(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}, x=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}};(x=ValueExp{e=IntValue{val=1}};(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))), y=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}, x=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}};(x=ValueExp{e=IntValue{val=1}};(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))), y=(int)]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}, x=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}};(x=ValueExp{e=IntValue{val=1}};(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(v=ValueExp{e=IntValue{val=0}};(repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}};(x=ValueExp{e=IntValue{val=1}};(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}};(x=ValueExp{e=IntValue{val=1}};(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))), v=ValueExp{e=IntValue{val=0}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}};(x=ValueExp{e=IntValue{val=1}};(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))), v=ValueExp{e=IntValue{val=0}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}};(x=ValueExp{e=IntValue{val=1}};(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}};(x=ValueExp{e=IntValue{val=1}};(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), repeat{ (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}) } until VarExp{id='v'} == ValueExp{e=IntValue{val=3}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), ((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}});(WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), ((ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}});(WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}, ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}})), v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))), (WHILE(NotExp{exp=VarExp{id='v'} == ValueExp{e=IntValue{val=3}}}) (ForkStatement{state=(print(VarExp{id='v'});v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}})};v=VarExp{id='v'}+ValueExp{e=IntValue{val=1}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}, print(VarExp{id='v'})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(x=ValueExp{e=IntValue{val=1}};(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[v=VarExp{id='v'}-ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=0}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))), x=ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=2
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=-1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))), x=ValueExp{e=IntValue{val=1}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=0}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(No operations;(y=ValueExp{e=IntValue{val=3}};(No operations;print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=3}};(No operations;print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))), No operations]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=3}};(No operations;print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))), No operations]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=3}};(No operations;print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(y=ValueExp{e=IntValue{val=3}};(No operations;print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(No operations;print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})), y=ValueExp{e=IntValue{val=3}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(No operations;print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})), y=ValueExp{e=IntValue{val=3}}]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}, y=IntValue{val=0}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(No operations;print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}, y=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[(No operations;print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}))]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}, y=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}), No operations]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}, y=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}}), No operations]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}, y=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}, y=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[print(VarExp{id='v'}*ValueExp{e=IntValue{val=10}})]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}, y=IntValue{val=3}}}
, out=IntValue{val=0} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
ProgramState{id=1
exeStack=MyStack{stack=[]}
, symTable=MyDictionary{dictionary={v=IntValue{val=1}, x=IntValue{val=1}, y=IntValue{val=3}}}
, out=IntValue{val=0} IntValue{val=10} 
, File Table[]
MyHeap{heapMap={}, freeAddress=1}

}
